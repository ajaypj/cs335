
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADD_ASSIGN AND AND_ASSIGN AND_NOT AND_NOT_ASSIGN ARROW ASSIGN BREAK CASE CHAN COLON COM COMMA CONST CONTINUE DEC DEFAULT DEFER DEFINE ELLIPSIS ELSE EQL FALLTHROUGH FLOAT FOR FUNC GEQ GO GOTO GTR ID IF IMAG IMPORT INC INT INTERFACE LAND LBRACE LBRACK LEQ LOR LPAREN LSS MAP MUL MUL_ASSIGN NEQ NOT OR OR_ASSIGN PACKAGE PERIOD QUO QUO_ASSIGN RANGE RBRACE RBRACK REM REM_ASSIGN RETURN RPAREN SELECT SEMICOLON SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SUB SUB_ASSIGN SWITCH TYPE VAR XOR XOR_ASSIGNexpression : expression ADD termexpression : expression SUB termexpression : termterm : term MUL factorterm : term QUO factorterm : factorfactor : INTfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'RPAREN':([1,2,4,8,11,12,13,14,15,],[-3,-7,-6,13,-4,-5,-8,-1,-2,]),'SUB':([1,2,4,5,8,11,12,13,14,15,],[-3,-7,-6,10,10,-4,-5,-8,-1,-2,]),'INT':([0,3,6,7,9,10,],[2,2,2,2,2,2,]),'ADD':([1,2,4,5,8,11,12,13,14,15,],[-3,-7,-6,9,9,-4,-5,-8,-1,-2,]),'LPAREN':([0,3,6,7,9,10,],[3,3,3,3,3,3,]),'MUL':([1,2,4,11,12,13,14,15,],[6,-7,-6,-4,-5,-8,6,6,]),'QUO':([1,2,4,11,12,13,14,15,],[7,-7,-6,-4,-5,-8,7,7,]),'$end':([1,2,4,5,11,12,13,14,15,],[-3,-7,-6,0,-4,-5,-8,-1,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,9,10,],[1,1,14,15,]),'expression':([0,3,],[5,8,]),'factor':([0,3,6,7,9,10,],[4,4,11,12,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression ADD term','expression',3,'p_expression_plus','parser.py',263),
  ('expression -> expression SUB term','expression',3,'p_expression_minus','parser.py',267),
  ('expression -> term','expression',1,'p_expression_term','parser.py',271),
  ('term -> term MUL factor','term',3,'p_term_times','parser.py',275),
  ('term -> term QUO factor','term',3,'p_term_div','parser.py',279),
  ('term -> factor','term',1,'p_term_factor','parser.py',283),
  ('factor -> INT','factor',1,'p_factor_num','parser.py',287),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',291),
]
