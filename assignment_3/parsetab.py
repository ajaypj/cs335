
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIDSTRINGINTFLOATIMAGSTRUCTleftCOMMAleftLBRACERBRACErightASSIGNADD_ASSIGNSUB_ASSIGNMUL_ASSIGNQUO_ASSIGNREM_ASSIGNAND_ASSIGNOR_ASSIGNXOR_ASSIGNSHL_ASSIGNSHR_ASSIGNrightDEFINEleftLORleftLANDleftORleftXORleftANDleftEQLNEQleftLSSGTRLEQGEQleftSHLSHRleftADDSUBleftMULQUOREMrightNOTINCDECleftLPARENRPARENLBRACKRBRACKARROWPERIODnonassocBREAKDEFAULTFUNCINTERFACESELECTCASEDEFERGOMAPCHANELSEGOTOPACKAGESWITCHCONSTFALLTHROUGHIFRANGETYPECONTINUEFORIMPORTRETURNVARADD ADD_ASSIGN AND AND_ASSIGN AND_NOT AND_NOT_ASSIGN ARROW ASSIGN BREAK CASE CHAN COLON COM COMMA COND CONST CONTINUE DEC DEFAULT DEFER DEFINE ELLIPSIS ELSE EQL FALLTHROUGH FLOAT FOR FUNC GEQ GO GOTO GTR ID IF IMAG IMPORT INC INT INTERFACE LAND LBRACE LBRACK LEQ LOR LPAREN LSS MAP MUL MUL_ASSIGN NEQ NOT OR OR_ASSIGN PACKAGE PERIOD QUO QUO_ASSIGN RANGE RBRACE RBRACK REM REM_ASSIGN RETURN RPAREN RUNE SELECT SEMICOLON SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SUB SUB_ASSIGN SWITCH TYPE VAR VARTYPE XOR XOR_ASSIGN SourceFile     \t\t: PackageClause ImportDeclList TopLevelDeclList\n                            | PackageClause ImportDeclList\n                            | PackageClause TopLevelDeclList\n                            | PackageClause  PackageClause  \t\t: PACKAGE ID SEMICOLON  ImportDeclList \t\t: ImportDecl SEMICOLON\n\t\t\t\t\t\t\t| ImportDeclList ImportDecl SEMICOLON  ImportDecl     \t\t: IMPORT LPAREN ImportSpecList RPAREN\n                            | IMPORT LPAREN RPAREN\n\t\t\t\t\t\t\t| IMPORT ImportSpec  ImportSpecList \t\t: ImportSpec SEMICOLON\n\t\t\t\t\t\t\t| ImportSpecList ImportSpec SEMICOLON  ImportSpec     \t\t: ID ImportPath\n\t\t\t\t\t\t\t| PERIOD ImportPath\n\t\t\t\t\t\t\t| ImportPath  ImportPath     \t\t: STRING  TopLevelDeclList    : TopLevelDecl SEMICOLON\n\t\t\t\t\t\t\t| TopLevelDeclList TopLevelDecl SEMICOLON  TopLevelDecl   \t\t: Declaration\n\t\t\t\t\t\t\t| FunctionDecl\n\t\t\t\t\t\t\t| MethodDecl  OPENB          \t\t:  CLOSEB         \t\t:  StartScope         \t:  EndScope    \t\t: StructScope          :  FunctionDecl   \t\t: FUNC ID StartScope Signature EndScope\n\t\t\t\t\t\t\t| FUNC ID StartScope Signature Block EndScope  MethodDecl     \t\t: FUNC Parameters ID Signature\n                            | FUNC Parameters ID Signature Block  Declaration    \t\t: ConstDecl\n                            | TypeDecl\n\t\t\t\t\t\t\t| VarDecl  ConstDecl           :  TypeDecl       \t\t: TYPE TypeSpec\n                            | TYPE LPAREN TypeSpecList RPAREN\n                            | TYPE LPAREN RPAREN  TypeSpecList       \t: TypeSpec SEMICOLON\n                            | TypeSpecList TypeSpec SEMICOLON  TypeSpec       \t\t: ID ASSIGN Type\n                            | ID Type  Type           \t\t: VARTYPE  Type           \t\t: LiteralType  Type           \t\t: ID  LiteralType    \t\t: ArrayType\n\t\t\t\t\t\t\t| StructType\n\t\t\t\t\t\t\t| PointerType  ArrayType      \t\t: LBRACK Expression RBRACK Type  StructType     \t\t: STRUCT StructScope LBRACE FieldDeclList RBRACE EndScope\n\t\t\t\t\t\t\t| STRUCT StructScope LBRACE RBRACE EndScope  FieldDeclList  \t\t: FieldDecl SEMICOLON\n\t\t\t\t\t\t\t| FieldDeclList FieldDecl SEMICOLON  FieldDecl      \t\t: IdentifierList Type STRING\n\t\t\t\t\t\t\t| IdentifierList Type  PointerType    \t\t: MUL Type  Signature      \t\t: Parameters Type  Signature      \t\t: Parameters\n                            | Parameters Parameters  Parameters     \t\t: LPAREN RPAREN\n\t\t\t\t\t\t\t| LPAREN ParameterList RPAREN\n\t\t\t\t\t\t\t| LPAREN ParameterList COMMA RPAREN  ParameterList  \t\t: ParameterDecl\n\t\t\t\t\t\t\t| ParameterList COMMA ParameterDecl  ParameterDecl  \t\t: Type\n                            | IdentifierList Type  VarDecl        \t\t: VAR VarSpec\n                            | VAR LPAREN VarSpecList RPAREN\n                            | VAR LPAREN RPAREN  VarSpecList       \t: VarSpec SEMICOLON\n                            | VarSpecList VarSpec SEMICOLON  VarSpec        \t\t: IdentifierList Type\n\t\t\t\t\t\t\t| IdentifierList Type ASSIGN ExpressionList\n                            | IdentifierList Type ASSIGN LBRACE ExpressionList RBRACE  IdentifierList \t\t: ID\n\t\t\t\t\t\t\t| IdentifierList COMMA ID  ShortVarDecl   \t\t: IdentifierList DEFINE ExpressionList  Block          \t\t: LBRACE StatementList RBRACE  StatementList  \t\t: StatementList Statement SEMICOLON\n\t\t\t\t\t\t\t| Statement SEMICOLON  Statement      \t\t: Declaration\n                            | SimpleStmt\n\t\t\t\t\t\t\t| ReturnStmt\n\t\t\t\t\t\t\t| BreakStmt\n\t\t\t\t\t\t\t| ContinueStmt\n                            | LabeledStmt\n\t\t\t\t\t\t\t| GotoStmt\n\t\t\t\t\t\t\t| StartScope Block EndScope\n\t\t\t\t\t\t\t| IfStmt\n                            | ForStmt\n                            | SwitchStmt\n                            | FallthroughStmt\n     SimpleStmt     \t\t: ShortVarDecl\n                            | EmptyStmt\n\t\t\t\t\t\t\t| ExpressionStmt\n                            | IncDecStmt\n                            | Assignment  EmptyStmt      \t\t:  ExpressionStmt \t\t: Expression  IncDecStmt     \t\t: Expression INC\n                            | Expression DEC  Assignment     \t\t: ExpressionList assign_op ExpressionList  ReturnStmt     \t\t: RETURN\n\t\t\t\t\t\t\t| RETURN ExpressionList  BreakStmt      \t\t: BREAK\n\t\t\t\t\t\t\t| BREAK ID  ContinueStmt   \t\t: CONTINUE\n\t\t\t\t\t\t\t| CONTINUE ID  LabeledStmt    \t\t: ID COLON Statement  GotoStmt       \t\t: GOTO ID  IfStmt         \t\t: IF OPENB Expression Block CLOSEB\n\t\t\t\t\t\t\t| IF OPENB SimpleStmt SEMICOLON Expression Block CLOSEB\n\t\t\t\t\t\t\t| IF OPENB Expression Block ELSE Block CLOSEB\n\t\t\t\t\t\t\t| IF OPENB Expression Block ELSE IfStmt CLOSEB\n\t\t\t\t\t\t\t| IF OPENB SimpleStmt SEMICOLON Expression Block ELSE IfStmt CLOSEB\n\t\t\t\t\t\t\t| IF OPENB SimpleStmt SEMICOLON Expression Block ELSE Block CLOSEB  ForStmt : FOR ForStmt1 Block  ForStmt1 \t\t    : Condition\n    | ForClause\n    | RangeClause  Condition \t\t    : Expression  ForClause \t\t    : SimpleStmt SEMICOLON Condition SEMICOLON SimpleStmt  RangeClause \t\t: RangeClause_1 RANGE Expression  RangeClause_1 \t\t: ExpressionList ASSIGN\n\t\t\t\t\t\t\t| IdentifierList DEFINE\n\t\t\t\t\t\t\t|  SwitchStmt          : ExprSwitchStmt  ExprSwitchStmt      : SWITCH SimpleStmt SEMICOLON Expression LBRACE ExprCaseClauseList RBRACE\n                            | SWITCH SimpleStmt SEMICOLON Expression LBRACE RBRACE\n                            | SWITCH Expression LBRACE ExprCaseClauseList RBRACE\n                            | SWITCH Expression LBRACE RBRACE\n                            | SWITCH LBRACE ExprCaseClauseList RBRACE\n                            | SWITCH LBRACE RBRACE  ExprCaseClauseList  : ExprCaseClause\n                            | ExprCaseClauseList ExprCaseClause  ExprCaseClause      : ExprSwitchCase COLON StatementList  ExprSwitchCase      : CASE ExpressionList\n                            | DEFAULT\n                            | CASE Expression  FallthroughStmt     : FALLTHROUGH  ExpressionList  \t: Expression\n\t\t\t\t\t\t\t| ExpressionList COMMA Expression  Expression     \t\t: Expression1\n     Expression1    \t\t: Expression2\n\t\t\t\t\t\t\t| Expression1 LOR Expression2  Expression2    \t\t: Expression3\n\t\t\t\t\t\t\t| Expression2 LAND Expression3  Expression3    \t\t: Expression4\n\t\t\t\t\t\t\t| Expression3 rel_op Expression4  Expression4    \t\t: Expression5\n\t\t\t\t\t\t\t| Expression4 add_op Expression5  Expression5    \t\t: UnaryExpr\n\t\t\t\t\t\t\t| Expression5 mul_op UnaryExpr  UnaryExpr      \t\t: PrimaryExpr\n\t\t\t\t\t\t\t| unary_op UnaryExpr  PrimaryExpr    \t\t: Operand\n     PrimaryExpr    \t\t: PrimaryExpr Selector\n     PrimaryExpr    \t\t: PrimaryExpr Index\n     PrimaryExpr    \t\t: PrimaryExpr Arguments\n     Selector       \t\t: PERIOD ID  Index          \t\t: LBRACK Expression RBRACK  Arguments           : LPAREN RPAREN\n                            | LPAREN ExpressionList COMMA RPAREN\n                            | LPAREN ExpressionList RPAREN  Operand        \t\t: Literal Operand        \t\t: ID Operand        \t\t: LPAREN Expression RPAREN Literal        \t\t: BasicLit  BasicLit       \t\t: INT  BasicLit       \t\t: FLOAT  BasicLit       \t\t: STRING  BasicLit       \t\t: IMAG  LiteralValue   \t\t: LBRACE RBRACE\n\t\t\t\t\t\t\t| SEMICOLON RBRACE\n\t\t\t\t\t\t\t| LBRACE ElementList RBRACE\n\t\t\t\t\t\t\t| SEMICOLON ElementList RBRACE\n\t\t\t\t\t\t\t| LBRACE ElementList COMMA RBRACE\n\t\t\t\t\t\t\t| SEMICOLON ElementList COMMA RBRACE  ElementList    \t\t: KeyedElement\n\t\t\t\t\t\t\t| ElementList COMMA KeyedElement  KeyedElement   \t\t: Element\n\t\t\t\t\t\t\t| Key COLON Element  Key            \t\t: Expression\n\t\t\t\t\t\t\t| LiteralValue  Element        \t\t: Expression\n\t\t\t\t\t\t\t| LiteralValue  assign_op      \t\t: ASSIGN\n\t\t\t\t\t\t\t| ADD_ASSIGN\n\t\t\t\t\t\t\t| SUB_ASSIGN\n\t\t\t\t\t\t\t| MUL_ASSIGN\n\t\t\t\t\t\t\t| QUO_ASSIGN\n\t\t\t\t\t\t\t| REM_ASSIGN\n\t\t\t\t\t\t\t| AND_ASSIGN\n\t\t\t\t\t\t\t| OR_ASSIGN\n\t\t\t\t\t\t\t| XOR_ASSIGN\n\t\t\t\t\t\t\t| SHL_ASSIGN\n\t\t\t\t\t\t\t| SHR_ASSIGN\n\t\t\t\t\t\t\t| AND_NOT_ASSIGN\n     rel_op         \t\t: EQL\n\t\t\t\t\t\t\t| NEQ\n\t\t\t\t\t\t\t| LSS\n\t\t\t\t\t\t\t| LEQ\n\t\t\t\t\t\t\t| GTR\n\t\t\t\t\t\t\t| GEQ\n     add_op         \t\t: ADD\n\t\t\t\t\t\t\t| SUB\n\t\t\t\t\t\t\t| OR\n\t\t\t\t\t\t\t| XOR  mul_op         \t\t: MUL\n\t\t\t\t\t\t\t| QUO\n\t\t\t\t\t\t\t| REM\n\t\t\t\t\t\t\t| SHL\n\t\t\t\t\t\t\t| SHR\n\t\t\t\t\t\t\t| AND\n\t\t\t\t\t\t\t| AND_NOT  unary_op       \t\t: ADD\n\t\t\t\t\t\t\t| SUB\n\t\t\t\t\t\t\t| NOT\n\t\t\t\t\t\t\t| XOR\n\t\t\t\t\t\t\t| MUL\n\t\t\t\t\t\t\t| AND\n\t\t\t\t\t\t\t| ARROW '
    
_lr_action_items = {'FUNC':([1,7,11,19,20,29,40,41,47,],[12,12,12,-17,-6,12,-5,-18,-7,]),'RETURN':([157,189,224,261,269,297,305,],[190,190,-79,190,-78,190,190,]),'SUB':([59,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,115,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,152,153,154,157,164,171,173,174,175,178,179,189,190,196,202,210,211,214,221,222,223,224,229,234,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,268,269,272,273,274,276,277,279,297,300,302,305,],[83,-216,-164,83,-219,-217,-167,-149,143,-218,-170,-171,-151,-155,-215,-221,83,-165,-220,-168,-169,-153,83,-154,83,-203,-201,-202,-200,83,-198,-199,83,-213,83,-211,-214,-210,-212,-208,-209,-207,-205,-204,83,-206,-157,83,-156,-158,83,83,83,143,-152,-150,-166,-159,-161,83,83,83,83,-165,-22,83,-160,83,-163,-79,83,-165,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,83,-195,-186,83,83,-162,-78,83,83,83,-186,83,83,83,83,83,83,]),'DEFAULT':([224,244,269,278,283,284,294,299,303,305,311,],[-79,282,-78,282,-133,282,282,-134,282,-135,282,]),'ARROW':([59,83,85,86,87,94,99,100,101,104,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,154,157,164,189,190,196,202,211,214,222,224,229,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,269,272,273,274,276,277,279,297,300,302,305,],[100,-216,100,-219,-217,-218,-215,-221,100,-220,100,100,-203,-201,-202,-200,100,-198,-199,100,-213,100,-211,-214,-210,-212,-208,-209,-207,-205,-204,100,-206,100,100,100,100,100,100,100,100,-22,100,100,-79,100,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,100,-195,-186,100,100,-78,100,100,100,-186,100,100,100,100,100,100,]),'GOTO':([157,189,224,261,269,297,305,],[186,186,-79,186,-78,186,186,]),'SHR_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,251,-140,-165,-160,-163,-165,251,-140,-140,-141,-162,-140,]),'LOR':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,125,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'COLON':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,210,221,223,263,268,281,282,295,296,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,261,-160,-163,-141,-162,297,-137,-136,-138,]),'REM':([84,88,92,95,96,97,98,103,105,106,107,124,149,152,153,173,174,175,178,179,210,221,223,234,268,],[-164,-167,138,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-152,138,-166,-159,-161,-165,-160,-163,-165,-162,]),'MUL':([30,33,36,39,50,51,53,56,59,73,78,79,83,84,85,86,87,88,92,94,95,96,97,98,99,100,101,103,104,105,106,107,108,114,115,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,152,153,154,157,164,169,173,174,175,178,179,189,190,196,202,210,211,214,221,222,223,224,229,234,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,268,269,272,273,274,276,277,279,297,300,302,305,],[51,-74,51,51,51,51,-59,-74,86,51,51,-60,-216,-164,86,-219,-217,-167,140,-218,-170,-171,-151,-155,-215,-221,86,-165,-220,-168,-169,-153,51,-75,86,-61,-154,86,-203,-201,-202,-200,86,-198,-199,86,-213,86,-211,-214,-210,-212,-208,-209,-207,-205,-204,86,-206,51,-157,86,-156,-158,86,86,86,51,-152,140,-166,-159,-161,86,86,86,86,-165,-22,86,-160,86,-163,-79,86,-165,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,86,-195,-186,86,86,-162,-78,86,86,86,-186,86,86,86,86,86,86,]),'DEC':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,205,210,221,223,234,240,243,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,258,-165,-160,-163,-165,258,258,-162,258,]),'NEQ':([84,88,90,92,93,95,96,97,98,103,105,106,107,124,149,152,153,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,132,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-148,132,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'CASE':([224,244,269,278,283,284,294,299,303,305,311,],[-79,279,-78,279,-133,279,279,-134,279,-135,279,]),'GEQ':([84,88,90,92,93,95,96,97,98,103,105,106,107,124,149,152,153,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,126,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-148,126,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'LAND':([84,88,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,-145,133,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,133,-148,-146,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'RPAREN':([26,30,35,37,45,48,49,52,54,55,56,58,60,61,66,67,71,75,78,80,81,84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,111,118,120,122,124,147,149,152,153,154,161,163,165,166,170,171,172,173,174,175,176,178,179,180,216,218,221,222,223,263,265,268,],[43,53,64,70,76,-45,79,-64,-62,-46,-44,-43,-42,-47,112,-44,116,-11,121,-65,-55,-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-69,-38,-12,-63,-154,175,-157,-156,-158,179,-70,-140,-39,-25,-144,-148,-146,-152,-150,-166,-48,-159,-161,223,-50,-25,-160,268,-163,-141,-49,-162,]),'MUL_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,246,-140,-165,-160,-163,-165,246,-140,-140,-141,-162,-140,]),'SEMICOLON':([1,4,5,6,7,8,10,11,14,16,17,18,19,20,21,22,23,25,28,29,34,38,40,41,42,43,44,46,47,48,53,55,58,60,61,64,65,67,69,70,72,74,76,77,79,81,84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,108,109,110,112,113,116,117,119,121,124,149,152,153,155,156,157,158,159,160,162,163,166,167,170,171,172,173,174,175,176,178,179,181,182,183,184,185,187,188,189,190,191,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,216,218,219,220,221,223,224,225,226,227,228,230,231,234,240,241,242,243,258,259,260,261,262,263,264,265,267,268,269,270,271,275,280,285,286,287,288,289,290,293,297,298,301,304,305,307,310,312,313,314,315,316,318,319,320,321,322,323,],[-34,-20,19,20,-34,-19,-32,-34,-21,-33,-31,40,-17,-6,41,-16,-10,-15,47,-34,-66,-35,-5,-18,-14,-9,75,-13,-7,-45,-59,-46,-43,-42,-47,-68,111,-44,-71,-37,118,-41,-8,120,-60,-55,-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-57,-29,-25,-67,161,-36,165,-40,-61,-154,-157,-156,-158,-58,-56,-34,-30,-27,-25,-72,-140,-25,217,-144,-148,-146,-152,-150,-166,-48,-159,-161,-84,-94,224,-88,-96,-85,-93,-34,-102,-126,-95,-86,-97,-90,-106,-139,-91,-92,-97,-80,-98,-104,-82,-81,-89,-165,-22,-83,-28,-50,-25,266,-54,-160,-163,-79,-109,269,-77,-103,-25,272,-165,-98,-107,277,-98,-100,-99,-105,-34,-97,-141,-73,-49,-53,-162,-78,-76,-87,-116,-132,-101,-108,300,-98,302,-120,-130,-34,-131,-23,-129,-34,-110,-128,-23,-23,-23,-127,-111,-113,-112,-23,-23,-114,-115,]),'RANGE':([196,233,273,276,],[-125,274,-124,-123,]),'FALLTHROUGH':([157,189,224,261,269,297,305,],[199,199,-79,199,-78,199,199,]),'REM_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,249,-140,-165,-160,-163,-165,249,-140,-140,-141,-162,-140,]),'SWITCH':([157,189,224,261,269,297,305,],[202,202,-79,202,-78,202,202,]),'AND_NOT':([84,88,92,95,96,97,98,103,105,106,107,124,149,152,153,173,174,175,178,179,210,221,223,234,268,],[-164,-167,137,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-152,137,-166,-159,-161,-165,-160,-163,-165,-162,]),'AND_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,253,-140,-165,-160,-163,-165,253,-140,-140,-141,-162,-140,]),'COMMA':([33,36,48,49,50,52,54,55,56,58,60,61,67,80,81,84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,114,122,124,149,152,153,162,163,166,169,170,171,172,173,174,175,176,178,179,180,192,204,205,210,215,216,218,221,223,228,232,234,238,240,243,263,265,268,270,285,288,295,296,],[-74,68,-45,78,68,-64,-62,-46,-44,-43,-42,-47,-44,-65,-55,-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-75,-63,-154,-157,-156,-158,214,-140,-25,68,-144,-148,-146,-152,-150,-166,-48,-159,-161,222,68,214,-140,-74,214,-50,-25,-160,-163,214,68,-74,214,-140,-140,-141,-49,-162,214,214,-140,214,-140,]),'LSS':([84,88,90,92,93,95,96,97,98,103,105,106,107,124,149,152,153,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,129,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-148,129,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'IMPORT':([1,11,20,40,47,],[9,9,-6,-5,-7,]),'GTR':([84,88,90,92,93,95,96,97,98,103,105,106,107,124,149,152,153,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,128,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-148,128,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'ASSIGN':([39,48,55,58,60,61,67,69,81,84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,166,170,171,172,173,174,175,176,178,179,204,205,210,216,218,221,223,234,238,240,243,263,265,268,288,],[73,-45,-46,-43,-42,-47,-44,115,-55,-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-25,-144,-148,-146,-152,-150,-166,-48,-159,-161,257,-140,-165,-50,-25,-160,-163,-165,276,-140,-140,-141,-49,-162,-140,]),'$end':([1,3,7,11,19,20,29,40,41,47,],[-4,0,-3,-2,-17,-6,-1,-5,-18,-7,]),'SUB_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,245,-140,-165,-160,-163,-165,245,-140,-140,-141,-162,-140,]),'SHR':([84,88,92,95,96,97,98,103,105,106,107,124,149,152,153,173,174,175,178,179,210,221,223,234,268,],[-164,-167,139,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-152,139,-166,-159,-161,-165,-160,-163,-165,-162,]),'XOR':([59,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,115,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,152,153,154,157,164,171,173,174,175,178,179,189,190,196,202,210,211,214,221,222,223,224,229,234,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,268,269,272,273,274,276,277,279,297,300,302,305,],[94,-216,-164,94,-219,-217,-167,-149,142,-218,-170,-171,-151,-155,-215,-221,94,-165,-220,-168,-169,-153,94,-154,94,-203,-201,-202,-200,94,-198,-199,94,-213,94,-211,-214,-210,-212,-208,-209,-207,-205,-204,94,-206,-157,94,-156,-158,94,94,94,142,-152,-150,-166,-159,-161,94,94,94,94,-165,-22,94,-160,94,-163,-79,94,-165,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,94,-195,-186,94,94,-162,-78,94,94,94,-186,94,94,94,94,94,94,]),'STRING':([9,24,26,27,45,48,55,58,59,60,61,67,75,81,83,85,86,87,94,99,100,101,104,115,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,154,157,164,166,176,189,190,196,202,211,214,216,218,220,222,224,229,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,265,269,272,273,274,276,277,279,297,300,302,305,],[22,22,22,22,22,-45,-46,-43,95,-42,-47,-44,-11,-55,-216,95,-219,-217,-218,-215,-221,95,-220,95,-12,95,-203,-201,-202,-200,95,-198,-199,95,-213,95,-211,-214,-210,-212,-208,-209,-207,-205,-204,95,-206,95,95,95,95,-25,-48,95,95,95,95,-22,95,-50,-25,267,95,-79,95,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,95,-195,-186,95,95,-49,-78,95,95,95,-186,95,95,95,95,95,95,]),'FOR':([157,189,224,261,269,297,305,],[196,196,-79,196,-78,196,196,]),'PACKAGE':([0,],[2,]),'QUO_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,248,-140,-165,-160,-163,-165,248,-140,-140,-141,-162,-140,]),'IMAG':([59,83,85,86,87,94,99,100,101,104,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,154,157,164,189,190,196,202,211,214,222,224,229,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,269,272,273,274,276,277,279,297,300,302,305,],[96,-216,96,-219,-217,-218,-215,-221,96,-220,96,96,-203,-201,-202,-200,96,-198,-199,96,-213,96,-211,-214,-210,-212,-208,-209,-207,-205,-204,96,-206,96,96,96,96,96,96,96,96,-22,96,96,-79,96,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,96,-195,-186,96,96,-78,96,96,96,-186,96,96,96,96,96,96,]),'RBRACK':([84,88,89,90,91,92,93,95,96,97,98,102,103,105,106,107,124,149,152,153,170,171,172,173,174,175,177,178,179,221,223,268,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,148,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,221,-159,-161,-160,-163,-162,]),'PERIOD':([9,26,45,75,84,88,95,96,98,103,105,106,107,120,149,152,153,175,178,179,210,221,223,234,268,],[24,24,24,-11,-164,-167,-170,-171,-155,-165,-168,-169,151,-12,-157,-156,-158,-166,-159,-161,-165,-160,-163,-165,-162,]),'RBRACE':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,123,124,149,152,153,163,168,170,171,172,173,174,175,178,179,189,215,217,221,223,224,244,263,266,268,269,278,283,284,294,299,303,305,311,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,166,-154,-157,-156,-158,-140,218,-144,-148,-146,-152,-150,-166,-159,-161,227,264,-51,-160,-163,-79,280,-141,-52,-162,-78,293,-133,298,304,-134,310,-135,315,]),'ELSE':([227,301,312,],[-77,308,317,]),'ADD':([59,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,115,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,152,153,154,157,164,171,173,174,175,178,179,189,190,196,202,210,211,214,221,222,223,224,229,234,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,268,269,272,273,274,276,277,279,297,300,302,305,],[99,-216,-164,99,-219,-217,-167,-149,144,-218,-170,-171,-151,-155,-215,-221,99,-165,-220,-168,-169,-153,99,-154,99,-203,-201,-202,-200,99,-198,-199,99,-213,99,-211,-214,-210,-212,-208,-209,-207,-205,-204,99,-206,-157,99,-156,-158,99,99,99,144,-152,-150,-166,-159,-161,99,99,99,99,-165,-22,99,-160,99,-163,-79,99,-165,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,99,-195,-186,99,99,-162,-78,99,99,99,-186,99,99,99,99,99,99,]),'EQL':([84,88,90,92,93,95,96,97,98,103,105,106,107,124,149,152,153,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,131,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-148,131,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'LPAREN':([9,12,13,15,32,53,59,62,63,79,83,84,85,86,87,88,94,95,96,98,99,100,101,103,104,105,106,107,108,115,121,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,152,153,154,157,164,175,178,179,189,190,196,202,210,211,214,221,222,223,224,229,234,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,268,269,272,273,274,276,277,279,297,300,302,305,],[26,30,35,37,-24,-59,101,30,30,-60,-216,-164,101,-219,-217,-167,-218,-170,-171,-155,-215,-221,101,-165,-220,-168,-169,154,30,101,-61,101,-203,-201,-202,-200,101,-198,-199,101,-213,101,-211,-214,-210,-212,-208,-209,-207,-205,-204,101,-206,-157,101,-156,-158,101,101,101,-166,-159,-161,101,101,101,101,-165,-22,101,-160,101,-163,-79,101,-165,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,101,-195,-186,101,101,-162,-78,101,101,101,-186,101,101,101,101,101,101,]),'VAR':([1,7,11,19,20,29,40,41,47,157,189,224,261,269,297,305,],[13,13,13,-17,-6,13,-5,-18,-7,13,13,-79,13,-78,13,13,]),'SHL_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,256,-140,-165,-160,-163,-165,256,-140,-140,-141,-162,-140,]),'SHL':([84,88,92,95,96,97,98,103,105,106,107,124,149,152,153,173,174,175,178,179,210,221,223,234,268,],[-164,-167,136,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-152,136,-166,-159,-161,-165,-160,-163,-165,-162,]),'ID':([2,9,12,13,15,26,30,31,33,35,36,37,39,45,50,51,53,56,59,66,68,71,73,75,78,79,83,85,86,87,94,99,100,101,104,108,111,114,115,118,120,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,150,151,154,157,161,164,165,168,169,186,189,190,196,198,202,206,211,214,217,222,224,229,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,266,269,272,273,274,276,277,279,297,300,302,305,],[18,27,32,33,39,27,56,62,-74,33,67,39,67,27,67,67,-59,-74,103,33,114,39,67,-11,56,-60,-216,103,-219,-217,-218,-215,-221,103,-220,67,-69,-75,103,-38,-12,-61,33,103,-203,-201,-202,-200,103,-198,-199,103,-213,103,-211,-214,-210,-212,-208,-209,-207,-205,-204,103,-206,67,103,178,103,210,-70,103,-39,33,67,225,210,103,234,241,234,260,-22,103,-51,103,-79,103,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,103,-195,-186,210,234,-52,-78,103,103,103,-186,103,103,210,103,234,210,]),'IF':([157,189,224,261,269,297,305,308,317,],[211,211,-79,211,-78,211,211,211,211,]),'AND':([59,83,84,85,86,87,88,92,94,95,96,97,98,99,100,101,103,104,105,106,107,115,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,152,153,154,157,164,173,174,175,178,179,189,190,196,202,210,211,214,221,222,223,224,229,234,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,268,269,272,273,274,276,277,279,297,300,302,305,],[104,-216,-164,104,-219,-217,-167,134,-218,-170,-171,-151,-155,-215,-221,104,-165,-220,-168,-169,-153,104,-154,104,-203,-201,-202,-200,104,-198,-199,104,-213,104,-211,-214,-210,-212,-208,-209,-207,-205,-204,104,-206,-157,104,-156,-158,104,104,104,-152,134,-166,-159,-161,104,104,104,104,-165,-22,104,-160,104,-163,-79,104,-165,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,104,-195,-186,104,104,-162,-78,104,104,104,-186,104,104,104,104,104,104,]),'LBRACE':([48,53,55,57,58,60,61,67,79,81,82,84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,108,109,110,115,121,124,149,152,153,155,156,157,163,166,170,171,172,173,174,175,176,178,179,182,185,188,189,193,194,201,202,205,216,218,221,223,224,234,235,236,237,239,240,243,258,259,261,263,265,268,269,270,285,288,291,292,297,302,305,306,308,309,317,],[-45,-59,-46,-26,-43,-42,-47,-44,-60,-55,123,-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-57,157,157,164,-61,-154,-157,-156,-158,-58,-56,-24,-140,-25,-144,-148,-146,-152,-150,-166,-48,-159,-161,-94,-96,-93,-24,157,-95,-92,244,-98,-50,-25,-160,-163,-79,-165,-119,-117,157,-118,-120,278,-100,-99,-24,-141,-49,-162,-78,-76,-101,157,-122,303,-24,-97,-24,157,157,-121,157,]),'STRUCT':([30,33,36,39,50,51,53,56,73,78,79,108,114,121,148,169,],[57,-74,57,57,57,57,-59,-74,57,57,-60,57,-75,-61,57,57,]),'XOR_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,247,-140,-165,-160,-163,-165,247,-140,-140,-141,-162,-140,]),'INT':([59,83,85,86,87,94,99,100,101,104,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,154,157,164,189,190,196,202,211,214,222,224,229,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,269,272,273,274,276,277,279,297,300,302,305,],[105,-216,105,-219,-217,-218,-215,-221,105,-220,105,105,-203,-201,-202,-200,105,-198,-199,105,-213,105,-211,-214,-210,-212,-208,-209,-207,-205,-204,105,-206,105,105,105,105,105,105,105,105,-22,105,105,-79,105,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,105,-195,-186,105,105,-78,105,105,105,-186,105,105,105,105,105,105,]),'FLOAT':([59,83,85,86,87,94,99,100,101,104,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,154,157,164,189,190,196,202,211,214,222,224,229,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,269,272,273,274,276,277,279,297,300,302,305,],[106,-216,106,-219,-217,-218,-215,-221,106,-220,106,106,-203,-201,-202,-200,106,-198,-199,106,-213,106,-211,-214,-210,-212,-208,-209,-207,-205,-204,106,-206,106,106,106,106,106,106,106,106,-22,106,106,-79,106,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,106,-195,-186,106,106,-78,106,106,106,-186,106,106,106,106,106,106,]),'OR_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,250,-140,-165,-160,-163,-165,250,-140,-140,-141,-162,-140,]),'LBRACK':([30,33,36,39,50,51,53,56,73,78,79,84,88,95,96,98,103,105,106,107,108,114,121,148,149,152,153,169,175,178,179,210,221,223,234,268,],[59,-74,59,59,59,59,-59,-74,59,59,-60,-164,-167,-170,-171,-155,-165,-168,-169,150,59,-75,-61,59,-157,-156,-158,59,-166,-159,-161,-165,-160,-163,-165,-162,]),'ADD_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,252,-140,-165,-160,-163,-165,252,-140,-140,-141,-162,-140,]),'BREAK':([157,189,224,261,269,297,305,],[206,206,-79,206,-78,206,206,]),'LEQ':([84,88,90,92,93,95,96,97,98,103,105,106,107,124,149,152,153,171,172,173,174,175,178,179,210,221,223,234,268,],[-164,-167,127,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-148,127,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'CONTINUE':([157,189,224,261,269,297,305,],[198,198,-79,198,-78,198,198,]),'VARTYPE':([30,33,36,39,50,51,53,56,73,78,79,108,114,121,148,169,],[60,-74,60,60,60,60,-59,-74,60,60,-60,60,-75,-61,60,60,]),'AND_NOT_ASSIGN':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,204,205,210,221,223,234,238,240,243,263,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,254,-140,-165,-160,-163,-165,254,-140,-140,-141,-162,-140,]),'NOT':([59,83,85,86,87,94,99,100,101,104,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,154,157,164,189,190,196,202,211,214,222,224,229,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,269,272,273,274,276,277,279,297,300,302,305,],[87,-216,87,-219,-217,-218,-215,-221,87,-220,87,87,-203,-201,-202,-200,87,-198,-199,87,-213,87,-211,-214,-210,-212,-208,-209,-207,-205,-204,87,-206,87,87,87,87,87,87,87,87,-22,87,87,-79,87,-188,-189,-194,-190,-191,-193,-196,-187,-192,-197,87,-195,-186,87,87,-78,87,87,87,-186,87,87,87,87,87,87,]),'DEFINE':([114,192,210,232,234,],[-75,229,-74,273,-74,]),'TYPE':([1,7,11,19,20,29,40,41,47,157,189,224,261,269,297,305,],[15,15,15,-17,-6,15,-5,-18,-7,15,15,-79,15,-78,15,15,]),'OR':([84,88,92,93,95,96,97,98,103,105,106,107,124,149,152,153,171,173,174,175,178,179,210,221,223,234,268,],[-164,-167,-149,146,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,146,-152,-150,-166,-159,-161,-165,-160,-163,-165,-162,]),'QUO':([84,88,92,95,96,97,98,103,105,106,107,124,149,152,153,173,174,175,178,179,210,221,223,234,268,],[-164,-167,141,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-152,141,-166,-159,-161,-165,-160,-163,-165,-162,]),'INC':([84,88,89,90,91,92,93,95,96,97,98,103,105,106,107,124,149,152,153,170,171,172,173,174,175,178,179,205,210,221,223,234,240,243,268,288,],[-164,-167,-142,-145,-143,-149,-147,-170,-171,-151,-155,-165,-168,-169,-153,-154,-157,-156,-158,-144,-148,-146,-152,-150,-166,-159,-161,259,-165,-160,-163,-165,259,259,-162,259,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Index':([107,],[149,]),'mul_op':([92,174,],[135,135,]),'Statement':([157,189,261,297,305,],[183,226,286,183,226,]),'Parameters':([12,62,63,108,],[31,108,108,155,]),'ReturnStmt':([157,189,261,297,305,],[207,207,207,207,207,]),'ContinueStmt':([157,189,261,297,305,],[181,181,181,181,181,]),'SourceFile':([0,],[3,]),'ParameterList':([30,],[49,]),'ArrayType':([30,36,39,50,51,73,78,108,148,169,],[48,48,48,48,48,48,48,48,48,48,]),'OPENB':([211,],[262,]),'ImportPath':([9,24,26,27,45,],[25,42,25,46,25,]),'TopLevelDecl':([1,7,11,29,],[5,21,5,21,]),'Literal':([59,85,101,115,125,130,133,135,145,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'ForStmt':([157,189,261,297,305,],[209,209,209,209,209,]),'unary_op':([59,85,101,115,125,130,133,135,145,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'SimpleStmt':([157,189,196,202,261,262,297,302,305,],[208,208,231,242,208,287,208,309,208,]),'IdentifierList':([13,30,35,66,78,123,157,168,189,196,202,261,262,297,302,305,],[36,50,36,36,50,169,192,169,192,232,192,192,192,192,192,192,]),'ImportSpecList':([26,],[45,]),'Operand':([59,85,101,115,125,130,133,135,145,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'Type':([30,36,39,50,51,73,78,108,148,169,],[52,69,74,80,81,119,52,156,176,220,]),'ImportDecl':([1,11,],[6,28,]),'CLOSEB':([301,312,313,314,320,321,],[307,316,318,319,322,323,]),'PackageClause':([0,],[1,]),'FallthroughStmt':([157,189,261,297,305,],[200,200,200,200,200,]),'ImportSpec':([9,26,45,],[23,44,77,]),'BasicLit':([59,85,101,115,125,130,133,135,145,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'ExprCaseClauseList':([244,278,303,],[284,294,311,]),'SwitchStmt':([157,189,261,297,305,],[197,197,197,197,197,]),'Selector':([107,],[152,]),'VarSpecList':([35,],[66,]),'StartScope':([32,157,189,261,297,305,],[63,193,193,193,193,193,]),'RangeClause':([196,],[235,]),'IncDecStmt':([157,189,196,202,261,262,297,302,305,],[194,194,194,194,194,194,194,194,194,]),'TopLevelDeclList':([1,11,],[7,29,]),'Declaration':([1,7,11,29,157,189,261,297,305,],[8,8,8,8,203,203,203,203,203,]),'Expression1':([59,101,115,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'ExprCaseClause':([244,278,284,294,303,311,],[283,283,299,299,283,299,]),'Expression3':([59,101,115,125,133,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[90,90,90,90,172,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'Expression2':([59,101,115,125,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[91,91,91,170,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'ParameterDecl':([30,78,],[54,122,]),'Expression4':([59,101,115,125,130,133,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[93,93,93,93,171,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'Condition':([196,272,],[236,289,]),'GotoStmt':([157,189,261,297,305,],[195,195,195,195,195,]),'ForStmt1':([196,],[237,]),'StructType':([30,36,39,50,51,73,78,108,148,169,],[55,55,55,55,55,55,55,55,55,55,]),'TypeDecl':([1,7,11,29,157,189,261,297,305,],[10,10,10,10,10,10,10,10,10,]),'EndScope':([110,160,166,218,230,],[159,213,216,265,271,]),'LabeledStmt':([157,189,261,297,305,],[187,187,187,187,187,]),'EmptyStmt':([157,189,196,202,261,262,297,302,305,],[188,188,188,188,188,188,188,188,188,]),'IfStmt':([157,189,261,297,305,308,317,],[184,184,184,184,184,313,320,]),'UnaryExpr':([59,85,101,115,125,130,133,135,145,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[97,124,97,97,97,97,97,173,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'StatementList':([157,297,],[189,305,]),'PrimaryExpr':([59,85,101,115,125,130,133,135,145,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'RangeClause_1':([196,],[233,]),'ExpressionList':([115,154,157,164,189,190,196,202,229,255,261,262,273,279,297,302,305,],[162,180,204,215,204,228,238,204,270,285,204,204,270,295,204,204,204,]),'ImportDeclList':([1,],[11,]),'assign_op':([204,238,],[255,255,]),'Signature':([62,63,],[109,110,]),'ForClause':([196,],[239,]),'Expression':([59,101,115,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[102,147,163,177,163,205,163,205,163,240,243,263,263,163,163,205,288,290,163,291,292,296,205,306,205,205,]),'ShortVarDecl':([157,189,196,202,261,262,297,302,305,],[201,201,201,201,201,201,201,201,201,]),'Block':([109,110,193,237,288,306,308,317,],[158,160,230,275,301,312,314,321,]),'MethodDecl':([1,7,11,29,],[14,14,14,14,]),'FieldDeclList':([123,],[168,]),'LiteralType':([30,36,39,50,51,73,78,108,148,169,],[58,58,58,58,58,58,58,58,58,58,]),'ExprSwitchCase':([244,278,284,294,303,311,],[281,281,281,281,281,281,]),'Expression5':([59,101,115,125,130,133,145,150,154,157,164,189,190,196,202,214,222,229,255,261,262,272,273,274,277,279,297,300,302,305,],[92,92,92,92,92,92,174,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'BreakStmt':([157,189,261,297,305,],[212,212,212,212,212,]),'VarDecl':([1,7,11,29,157,189,261,297,305,],[16,16,16,16,16,16,16,16,16,]),'ExpressionStmt':([157,189,196,202,261,262,297,302,305,],[182,182,182,182,182,182,182,182,182,]),'ExprSwitchStmt':([157,189,261,297,305,],[191,191,191,191,191,]),'VarSpec':([13,35,66,],[34,65,113,]),'add_op':([93,171,],[145,145,]),'Assignment':([157,189,196,202,261,262,297,302,305,],[185,185,185,185,185,185,185,185,185,]),'TypeSpecList':([37,],[71,]),'StructScope':([57,],[82,]),'FieldDecl':([123,168,],[167,219,]),'PointerType':([30,36,39,50,51,73,78,108,148,169,],[61,61,61,61,61,61,61,61,61,61,]),'TypeSpec':([15,37,71,],[38,72,117,]),'FunctionDecl':([1,7,11,29,],[4,4,4,4,]),'rel_op':([90,172,],[130,130,]),'ConstDecl':([1,7,11,29,157,189,261,297,305,],[17,17,17,17,17,17,17,17,17,]),'Arguments':([107,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PackageClause ImportDeclList TopLevelDeclList','SourceFile',3,'p_SourceFile','parser.py',83),
  ('SourceFile -> PackageClause ImportDeclList','SourceFile',2,'p_SourceFile','parser.py',84),
  ('SourceFile -> PackageClause TopLevelDeclList','SourceFile',2,'p_SourceFile','parser.py',85),
  ('SourceFile -> PackageClause','SourceFile',1,'p_SourceFile','parser.py',86),
  ('PackageClause -> PACKAGE ID SEMICOLON','PackageClause',3,'p_PackageClause','parser.py',90),
  ('ImportDeclList -> ImportDecl SEMICOLON','ImportDeclList',2,'p_ImportDeclList','parser.py',94),
  ('ImportDeclList -> ImportDeclList ImportDecl SEMICOLON','ImportDeclList',3,'p_ImportDeclList','parser.py',95),
  ('ImportDecl -> IMPORT LPAREN ImportSpecList RPAREN','ImportDecl',4,'p_ImportDecl','parser.py',99),
  ('ImportDecl -> IMPORT LPAREN RPAREN','ImportDecl',3,'p_ImportDecl','parser.py',100),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_ImportDecl','parser.py',101),
  ('ImportSpecList -> ImportSpec SEMICOLON','ImportSpecList',2,'p_ImportSpecList','parser.py',104),
  ('ImportSpecList -> ImportSpecList ImportSpec SEMICOLON','ImportSpecList',3,'p_ImportSpecList','parser.py',105),
  ('ImportSpec -> ID ImportPath','ImportSpec',2,'p_ImportSpec','parser.py',108),
  ('ImportSpec -> PERIOD ImportPath','ImportSpec',2,'p_ImportSpec','parser.py',109),
  ('ImportSpec -> ImportPath','ImportSpec',1,'p_ImportSpec','parser.py',110),
  ('ImportPath -> STRING','ImportPath',1,'p_ImportPath','parser.py',113),
  ('TopLevelDeclList -> TopLevelDecl SEMICOLON','TopLevelDeclList',2,'p_TopLevelDeclList','parser.py',116),
  ('TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON','TopLevelDeclList',3,'p_TopLevelDeclList','parser.py',117),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parser.py',120),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parser.py',121),
  ('TopLevelDecl -> MethodDecl','TopLevelDecl',1,'p_TopLevelDecl','parser.py',122),
  ('OPENB -> <empty>','OPENB',0,'p_OPENB','parser.py',126),
  ('CLOSEB -> <empty>','CLOSEB',0,'p_CLOSEB','parser.py',130),
  ('StartScope -> <empty>','StartScope',0,'p_StartScope','parser.py',134),
  ('EndScope -> <empty>','EndScope',0,'p_EndScope','parser.py',138),
  ('StructScope -> <empty>','StructScope',0,'p_StructScope','parser.py',143),
  ('FunctionDecl -> FUNC ID StartScope Signature EndScope','FunctionDecl',5,'p_FunctionDecl','parser.py',148),
  ('FunctionDecl -> FUNC ID StartScope Signature Block EndScope','FunctionDecl',6,'p_FunctionDecl','parser.py',149),
  ('MethodDecl -> FUNC Parameters ID Signature','MethodDecl',4,'p_MethodDecl','parser.py',157),
  ('MethodDecl -> FUNC Parameters ID Signature Block','MethodDecl',5,'p_MethodDecl','parser.py',158),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','parser.py',162),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','parser.py',163),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parser.py',164),
  ('ConstDecl -> <empty>','ConstDecl',0,'p_ConstDecl','parser.py',167),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_TypeDecl','parser.py',170),
  ('TypeDecl -> TYPE LPAREN TypeSpecList RPAREN','TypeDecl',4,'p_TypeDecl','parser.py',171),
  ('TypeDecl -> TYPE LPAREN RPAREN','TypeDecl',3,'p_TypeDecl','parser.py',172),
  ('TypeSpecList -> TypeSpec SEMICOLON','TypeSpecList',2,'p_TypeSpecList','parser.py',175),
  ('TypeSpecList -> TypeSpecList TypeSpec SEMICOLON','TypeSpecList',3,'p_TypeSpecList','parser.py',176),
  ('TypeSpec -> ID ASSIGN Type','TypeSpec',3,'p_TypeSpec','parser.py',179),
  ('TypeSpec -> ID Type','TypeSpec',2,'p_TypeSpec','parser.py',180),
  ('Type -> VARTYPE','Type',1,'p_Type1','parser.py',190),
  ('Type -> LiteralType','Type',1,'p_Type2','parser.py',194),
  ('Type -> ID','Type',1,'p_Type3','parser.py',199),
  ('LiteralType -> ArrayType','LiteralType',1,'p_LiteralType','parser.py',206),
  ('LiteralType -> StructType','LiteralType',1,'p_LiteralType','parser.py',207),
  ('LiteralType -> PointerType','LiteralType',1,'p_LiteralType','parser.py',208),
  ('ArrayType -> LBRACK Expression RBRACK Type','ArrayType',4,'p_ArrayType','parser.py',214),
  ('StructType -> STRUCT StructScope LBRACE FieldDeclList RBRACE EndScope','StructType',6,'p_StructType','parser.py',220),
  ('StructType -> STRUCT StructScope LBRACE RBRACE EndScope','StructType',5,'p_StructType','parser.py',221),
  ('FieldDeclList -> FieldDecl SEMICOLON','FieldDeclList',2,'p_FieldDeclList','parser.py',228),
  ('FieldDeclList -> FieldDeclList FieldDecl SEMICOLON','FieldDeclList',3,'p_FieldDeclList','parser.py',229),
  ('FieldDecl -> IdentifierList Type STRING','FieldDecl',3,'p_FieldDecl','parser.py',233),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_FieldDecl','parser.py',234),
  ('PointerType -> MUL Type','PointerType',2,'p_PointerType','parser.py',242),
  ('Signature -> Parameters Type','Signature',2,'p_Signature1','parser.py',260),
  ('Signature -> Parameters','Signature',1,'p_Signature2','parser.py',272),
  ('Signature -> Parameters Parameters','Signature',2,'p_Signature2','parser.py',273),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_Parameters','parser.py',283),
  ('Parameters -> LPAREN ParameterList RPAREN','Parameters',3,'p_Parameters','parser.py',284),
  ('Parameters -> LPAREN ParameterList COMMA RPAREN','Parameters',4,'p_Parameters','parser.py',285),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parser.py',290),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parser.py',291),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_ParameterDecl','parser.py',298),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_ParameterDecl','parser.py',299),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_VarDecl','parser.py',340),
  ('VarDecl -> VAR LPAREN VarSpecList RPAREN','VarDecl',4,'p_VarDecl','parser.py',341),
  ('VarDecl -> VAR LPAREN RPAREN','VarDecl',3,'p_VarDecl','parser.py',342),
  ('VarSpecList -> VarSpec SEMICOLON','VarSpecList',2,'p_VarSpecList','parser.py',345),
  ('VarSpecList -> VarSpecList VarSpec SEMICOLON','VarSpecList',3,'p_VarSpecList','parser.py',346),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parser.py',349),
  ('VarSpec -> IdentifierList Type ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parser.py',350),
  ('VarSpec -> IdentifierList Type ASSIGN LBRACE ExpressionList RBRACE','VarSpec',6,'p_VarSpec','parser.py',351),
  ('IdentifierList -> ID','IdentifierList',1,'p_IdentifierList','parser.py',374),
  ('IdentifierList -> IdentifierList COMMA ID','IdentifierList',3,'p_IdentifierList','parser.py',375),
  ('ShortVarDecl -> IdentifierList DEFINE ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parser.py',382),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_Block','parser.py',390),
  ('StatementList -> StatementList Statement SEMICOLON','StatementList',3,'p_StatementList','parser.py',395),
  ('StatementList -> Statement SEMICOLON','StatementList',2,'p_StatementList','parser.py',396),
  ('Statement -> Declaration','Statement',1,'p_Statement','parser.py',400),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','parser.py',401),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parser.py',402),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parser.py',403),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parser.py',404),
  ('Statement -> LabeledStmt','Statement',1,'p_Statement','parser.py',405),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','parser.py',406),
  ('Statement -> StartScope Block EndScope','Statement',3,'p_Statement','parser.py',407),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parser.py',408),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parser.py',409),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','parser.py',410),
  ('Statement -> FallthroughStmt','Statement',1,'p_Statement','parser.py',411),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parser.py',419),
  ('SimpleStmt -> EmptyStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',420),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',421),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',422),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parser.py',423),
  ('EmptyStmt -> <empty>','EmptyStmt',0,'p_EmptyStmt','parser.py',428),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_ExpressionStmt','parser.py',433),
  ('IncDecStmt -> Expression INC','IncDecStmt',2,'p_IncDecStmt','parser.py',441),
  ('IncDecStmt -> Expression DEC','IncDecStmt',2,'p_IncDecStmt','parser.py',442),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_Assignment','parser.py',454),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','parser.py',475),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_ReturnStmt','parser.py',476),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_BreakStmt','parser.py',480),
  ('BreakStmt -> BREAK ID','BreakStmt',2,'p_BreakStmt','parser.py',481),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_ContinueStmt','parser.py',485),
  ('ContinueStmt -> CONTINUE ID','ContinueStmt',2,'p_ContinueStmt','parser.py',486),
  ('LabeledStmt -> ID COLON Statement','LabeledStmt',3,'p_LabeledStmt','parser.py',490),
  ('GotoStmt -> GOTO ID','GotoStmt',2,'p_GotoStmt','parser.py',494),
  ('IfStmt -> IF OPENB Expression Block CLOSEB','IfStmt',5,'p_IfStmt','parser.py',499),
  ('IfStmt -> IF OPENB SimpleStmt SEMICOLON Expression Block CLOSEB','IfStmt',7,'p_IfStmt','parser.py',500),
  ('IfStmt -> IF OPENB Expression Block ELSE Block CLOSEB','IfStmt',7,'p_IfStmt','parser.py',501),
  ('IfStmt -> IF OPENB Expression Block ELSE IfStmt CLOSEB','IfStmt',7,'p_IfStmt','parser.py',502),
  ('IfStmt -> IF OPENB SimpleStmt SEMICOLON Expression Block ELSE IfStmt CLOSEB','IfStmt',9,'p_IfStmt','parser.py',503),
  ('IfStmt -> IF OPENB SimpleStmt SEMICOLON Expression Block ELSE Block CLOSEB','IfStmt',9,'p_IfStmt','parser.py',504),
  ('ForStmt -> FOR ForStmt1 Block','ForStmt',3,'p_ForStmt','parser.py',508),
  ('ForStmt1 -> Condition','ForStmt1',1,'p_ForStmt1','parser.py',512),
  ('ForStmt1 -> ForClause','ForStmt1',1,'p_ForStmt1','parser.py',513),
  ('ForStmt1 -> RangeClause','ForStmt1',1,'p_ForStmt1','parser.py',514),
  ('Condition -> Expression','Condition',1,'p_Condition','parser.py',518),
  ('ForClause -> SimpleStmt SEMICOLON Condition SEMICOLON SimpleStmt','ForClause',5,'p_ForClause','parser.py',523),
  ('RangeClause -> RangeClause_1 RANGE Expression','RangeClause',3,'p_RangeClause','parser.py',527),
  ('RangeClause_1 -> ExpressionList ASSIGN','RangeClause_1',2,'p_RangeClause_1','parser.py',531),
  ('RangeClause_1 -> IdentifierList DEFINE','RangeClause_1',2,'p_RangeClause_1','parser.py',532),
  ('RangeClause_1 -> <empty>','RangeClause_1',0,'p_RangeClause_1','parser.py',533),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_SwitchStmt','parser.py',537),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LBRACE ExprCaseClauseList RBRACE','ExprSwitchStmt',7,'p_ExprSwitchStmt','parser.py',541),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LBRACE RBRACE','ExprSwitchStmt',6,'p_ExprSwitchStmt','parser.py',542),
  ('ExprSwitchStmt -> SWITCH Expression LBRACE ExprCaseClauseList RBRACE','ExprSwitchStmt',5,'p_ExprSwitchStmt','parser.py',543),
  ('ExprSwitchStmt -> SWITCH Expression LBRACE RBRACE','ExprSwitchStmt',4,'p_ExprSwitchStmt','parser.py',544),
  ('ExprSwitchStmt -> SWITCH LBRACE ExprCaseClauseList RBRACE','ExprSwitchStmt',4,'p_ExprSwitchStmt','parser.py',545),
  ('ExprSwitchStmt -> SWITCH LBRACE RBRACE','ExprSwitchStmt',3,'p_ExprSwitchStmt','parser.py',546),
  ('ExprCaseClauseList -> ExprCaseClause','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',550),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',551),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',555),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',559),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',560),
  ('ExprSwitchCase -> CASE Expression','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',561),
  ('FallthroughStmt -> FALLTHROUGH','FallthroughStmt',1,'p_FallthroughStmt','parser.py',565),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','parser.py',600),
  ('ExpressionList -> ExpressionList COMMA Expression','ExpressionList',3,'p_ExpressionList','parser.py',601),
  ('Expression -> Expression1','Expression',1,'p_Expression','parser.py',607),
  ('Expression1 -> Expression2','Expression1',1,'p_Expression1','parser.py',618),
  ('Expression1 -> Expression1 LOR Expression2','Expression1',3,'p_Expression1','parser.py',619),
  ('Expression2 -> Expression3','Expression2',1,'p_Expression2','parser.py',627),
  ('Expression2 -> Expression2 LAND Expression3','Expression2',3,'p_Expression2','parser.py',628),
  ('Expression3 -> Expression4','Expression3',1,'p_Expression3','parser.py',636),
  ('Expression3 -> Expression3 rel_op Expression4','Expression3',3,'p_Expression3','parser.py',637),
  ('Expression4 -> Expression5','Expression4',1,'p_Expression4','parser.py',645),
  ('Expression4 -> Expression4 add_op Expression5','Expression4',3,'p_Expression4','parser.py',646),
  ('Expression5 -> UnaryExpr','Expression5',1,'p_Expression5','parser.py',654),
  ('Expression5 -> Expression5 mul_op UnaryExpr','Expression5',3,'p_Expression5','parser.py',655),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parser.py',663),
  ('UnaryExpr -> unary_op UnaryExpr','UnaryExpr',2,'p_UnaryExpr','parser.py',664),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_PrimaryExpr','parser.py',673),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr1','parser.py',678),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr2','parser.py',683),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr5','parser.py',697),
  ('Selector -> PERIOD ID','Selector',2,'p_Selector','parser.py',716),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_Index','parser.py',720),
  ('Arguments -> LPAREN RPAREN','Arguments',2,'p_Arguments','parser.py',739),
  ('Arguments -> LPAREN ExpressionList COMMA RPAREN','Arguments',4,'p_Arguments','parser.py',740),
  ('Arguments -> LPAREN ExpressionList RPAREN','Arguments',3,'p_Arguments','parser.py',741),
  ('Operand -> Literal','Operand',1,'p_Operand','parser.py',755),
  ('Operand -> ID','Operand',1,'p_Operand1','parser.py',759),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_Operand3','parser.py',781),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parser.py',785),
  ('BasicLit -> INT','BasicLit',1,'p_BasicLit','parser.py',791),
  ('BasicLit -> FLOAT','BasicLit',1,'p_BasicLit1','parser.py',799),
  ('BasicLit -> STRING','BasicLit',1,'p_BasicLit2','parser.py',807),
  ('BasicLit -> IMAG','BasicLit',1,'p_BasicLit3','parser.py',814),
  ('LiteralValue -> LBRACE RBRACE','LiteralValue',2,'p_LiteralValue','parser.py',833),
  ('LiteralValue -> SEMICOLON RBRACE','LiteralValue',2,'p_LiteralValue','parser.py',834),
  ('LiteralValue -> LBRACE ElementList RBRACE','LiteralValue',3,'p_LiteralValue','parser.py',835),
  ('LiteralValue -> SEMICOLON ElementList RBRACE','LiteralValue',3,'p_LiteralValue','parser.py',836),
  ('LiteralValue -> LBRACE ElementList COMMA RBRACE','LiteralValue',4,'p_LiteralValue','parser.py',837),
  ('LiteralValue -> SEMICOLON ElementList COMMA RBRACE','LiteralValue',4,'p_LiteralValue','parser.py',838),
  ('ElementList -> KeyedElement','ElementList',1,'p_ElementList','parser.py',842),
  ('ElementList -> ElementList COMMA KeyedElement','ElementList',3,'p_ElementList','parser.py',843),
  ('KeyedElement -> Element','KeyedElement',1,'p_KeyedElement','parser.py',847),
  ('KeyedElement -> Key COLON Element','KeyedElement',3,'p_KeyedElement','parser.py',848),
  ('Key -> Expression','Key',1,'p_Key','parser.py',852),
  ('Key -> LiteralValue','Key',1,'p_Key','parser.py',853),
  ('Element -> Expression','Element',1,'p_Element','parser.py',857),
  ('Element -> LiteralValue','Element',1,'p_Element','parser.py',858),
  ('assign_op -> ASSIGN','assign_op',1,'p_assign_op','parser.py',862),
  ('assign_op -> ADD_ASSIGN','assign_op',1,'p_assign_op','parser.py',863),
  ('assign_op -> SUB_ASSIGN','assign_op',1,'p_assign_op','parser.py',864),
  ('assign_op -> MUL_ASSIGN','assign_op',1,'p_assign_op','parser.py',865),
  ('assign_op -> QUO_ASSIGN','assign_op',1,'p_assign_op','parser.py',866),
  ('assign_op -> REM_ASSIGN','assign_op',1,'p_assign_op','parser.py',867),
  ('assign_op -> AND_ASSIGN','assign_op',1,'p_assign_op','parser.py',868),
  ('assign_op -> OR_ASSIGN','assign_op',1,'p_assign_op','parser.py',869),
  ('assign_op -> XOR_ASSIGN','assign_op',1,'p_assign_op','parser.py',870),
  ('assign_op -> SHL_ASSIGN','assign_op',1,'p_assign_op','parser.py',871),
  ('assign_op -> SHR_ASSIGN','assign_op',1,'p_assign_op','parser.py',872),
  ('assign_op -> AND_NOT_ASSIGN','assign_op',1,'p_assign_op','parser.py',873),
  ('rel_op -> EQL','rel_op',1,'p_rel_op','parser.py',879),
  ('rel_op -> NEQ','rel_op',1,'p_rel_op','parser.py',880),
  ('rel_op -> LSS','rel_op',1,'p_rel_op','parser.py',881),
  ('rel_op -> LEQ','rel_op',1,'p_rel_op','parser.py',882),
  ('rel_op -> GTR','rel_op',1,'p_rel_op','parser.py',883),
  ('rel_op -> GEQ','rel_op',1,'p_rel_op','parser.py',884),
  ('add_op -> ADD','add_op',1,'p_add_op','parser.py',889),
  ('add_op -> SUB','add_op',1,'p_add_op','parser.py',890),
  ('add_op -> OR','add_op',1,'p_add_op','parser.py',891),
  ('add_op -> XOR','add_op',1,'p_add_op','parser.py',892),
  ('mul_op -> MUL','mul_op',1,'p_mul_op','parser.py',896),
  ('mul_op -> QUO','mul_op',1,'p_mul_op','parser.py',897),
  ('mul_op -> REM','mul_op',1,'p_mul_op','parser.py',898),
  ('mul_op -> SHL','mul_op',1,'p_mul_op','parser.py',899),
  ('mul_op -> SHR','mul_op',1,'p_mul_op','parser.py',900),
  ('mul_op -> AND','mul_op',1,'p_mul_op','parser.py',901),
  ('mul_op -> AND_NOT','mul_op',1,'p_mul_op','parser.py',902),
  ('unary_op -> ADD','unary_op',1,'p_unary_op','parser.py',906),
  ('unary_op -> SUB','unary_op',1,'p_unary_op','parser.py',907),
  ('unary_op -> NOT','unary_op',1,'p_unary_op','parser.py',908),
  ('unary_op -> XOR','unary_op',1,'p_unary_op','parser.py',909),
  ('unary_op -> MUL','unary_op',1,'p_unary_op','parser.py',910),
  ('unary_op -> AND','unary_op',1,'p_unary_op','parser.py',911),
  ('unary_op -> ARROW','unary_op',1,'p_unary_op','parser.py',912),
]
