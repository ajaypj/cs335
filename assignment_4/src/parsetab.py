
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIDSTRINGINTFLOATIMAGSTRUCTleftCOMMAleftLBRACERBRACErightASSIGNADD_ASSIGNSUB_ASSIGNMUL_ASSIGNQUO_ASSIGNREM_ASSIGNAND_ASSIGNOR_ASSIGNXOR_ASSIGNSHL_ASSIGNSHR_ASSIGNrightDEFINEleftLORleftLANDleftORleftXORleftANDleftEQLNEQleftLSSGTRLEQGEQleftSHLSHRleftADDSUBleftMULQUOREMrightNOTINCDECleftLPARENRPARENLBRACKRBRACKARROWPERIODnonassocBREAKDEFAULTFUNCINTERFACESELECTCASEDEFERGOMAPCHANELSEGOTOPACKAGESWITCHCONSTFALLTHROUGHIFRANGETYPECONTINUEFORIMPORTRETURNVARADD ADD_ASSIGN AND AND_ASSIGN AND_NOT AND_NOT_ASSIGN ARROW ASSIGN BOOLVAL BREAK CASE CHAN COLON COM COMMA COND CONST CONTINUE DEC DEFAULT DEFER DEFINE ELLIPSIS ELSE EQL FALLTHROUGH FLOAT FOR FUNC GEQ GO GOTO GTR ID IF IMAG IMPORT INC INT INTERFACE LAND LBRACE LBRACK LEQ LOR LPAREN LSS MAP MUL MUL_ASSIGN NEQ NOT OR OR_ASSIGN PACKAGE PERIOD PRINT QUO QUO_ASSIGN RANGE RBRACE RBRACK REM REM_ASSIGN RETURN RPAREN RUNE SCAN SELECT SEMICOLON SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SUB SUB_ASSIGN SWITCH TYPE VAR VARTYPE XOR XOR_ASSIGN SourceFile     \t\t: PackageClause ImportDeclList TopLevelDeclList\n                            | PackageClause ImportDeclList\n                            | PackageClause TopLevelDeclList\n                            | PackageClause  PackageClause  \t\t: PACKAGE ID SEMICOLON  ImportDeclList \t\t: ImportDecl SEMICOLON\n\t\t\t\t\t\t\t| ImportDeclList ImportDecl SEMICOLON  ImportDecl     \t\t: IMPORT LPAREN ImportSpecList RPAREN\n                            | IMPORT LPAREN RPAREN\n\t\t\t\t\t\t\t| IMPORT STRING\n     ImportSpecList \t\t: STRING SEMICOLON\n\t\t\t\t\t\t\t| ImportSpecList STRING SEMICOLON\n     TopLevelDeclList    : TopLevelDecl SEMICOLON\n\t\t\t\t\t\t\t| TopLevelDeclList TopLevelDecl SEMICOLON  TopLevelDecl   \t\t: Declaration\n\t\t\t\t\t\t\t| FunctionDecl  StartScope         \t:  EndScope    \t\t:  StartStructScope    :  StartFuncScope      :  FunctionDecl   \t\t: FUNC ID StartFuncScope Signature EndScope\n\t\t\t\t\t\t\t| FUNC ID StartFuncScope Signature Block EndScope  Declaration    \t\t: TypeDecl\n\t\t\t\t\t\t\t| VarDecl  TypeDecl       \t\t: TYPE TypeSpec\n                            | TYPE LPAREN TypeSpecList RPAREN\n                            | TYPE LPAREN RPAREN  TypeSpecList       \t: TypeSpec SEMICOLON\n                            | TypeSpecList TypeSpec SEMICOLON  TypeSpec       \t\t: ID SaveTypeName ASSIGN Type\n                            | ID SaveTypeName Type  SaveTypeName        :  Type           \t\t: VARTYPE  Type           \t\t: LiteralType  Type           \t\t: ID  LiteralType    \t\t: ArrayType\n\t\t\t\t\t\t\t| StructType\n\t\t\t\t\t\t\t| PointerType  ArrayType      \t\t: LBRACK Expression RBRACK Type  StructType     \t\t: STRUCT StartStructScope LBRACE FieldDeclList RBRACE EndScope\n\t\t\t\t\t\t\t| STRUCT StartStructScope LBRACE RBRACE EndScope  FieldDeclList  \t\t: FieldDecl SEMICOLON\n\t\t\t\t\t\t\t| FieldDeclList FieldDecl SEMICOLON  FieldDecl      \t\t: IdentifierList Type STRING\n\t\t\t\t\t\t\t| IdentifierList Type  PointerType    \t\t: MUL Type  Signature      \t\t: Parameters\n                            | Parameters Type  Parameters     \t\t: LPAREN RPAREN\n\t\t\t\t\t\t\t| LPAREN ParameterList RPAREN\n\t\t\t\t\t\t\t| LPAREN ParameterList COMMA RPAREN  ParameterList  \t\t: ParameterDecl\n\t\t\t\t\t\t\t| ParameterList COMMA ParameterDecl  ParameterDecl  \t\t: IdentifierList Type  VarDecl        \t\t: VAR VarSpec\n                            | VAR LPAREN VarSpecList RPAREN\n                            | VAR LPAREN RPAREN  VarSpecList       \t: VarSpec SEMICOLON\n                            | VarSpecList VarSpec SEMICOLON  VarSpec        \t\t: IdentifierList Type\n                            | IdentifierList ASSIGN ExpressionList\n                            | IdentifierList Type ASSIGN ExpressionList\n                            | IdentifierList ASSIGN LBRACE ExpressionList RBRACE\n                            | IdentifierList Type ASSIGN LBRACE ExpressionList RBRACE  IdentifierList \t\t: ID\n\t\t\t\t\t\t\t| IdentifierList COMMA ID  ShortVarDecl   \t\t: IdentifierList DEFINE ExpressionList  Block          \t\t: LBRACE StatementList RBRACE\n                            | LBRACE RBRACE  StatementList  \t\t: StatementList Statement SEMICOLON\n\t\t\t\t\t\t\t| Statement SEMICOLON  Statement      \t\t: Declaration\n                            | SimpleStmt\n\t\t\t\t\t\t\t| ReturnStmt\n\t\t\t\t\t\t\t| BreakStmt\n\t\t\t\t\t\t\t| ContinueStmt\n                            | LabeledStmt\n\t\t\t\t\t\t\t| GotoStmt\n\t\t\t\t\t\t\t| StartScope Block EndScope\n\t\t\t\t\t\t\t| IfStmt\n                            | ForStmt\n                            | SwitchStmt\n                            | PrintStmt\n                            | ScanStmt\n     PrintStmt           : PRINT LPAREN Expression RPAREN\n     ScanStmt            : SCAN LPAREN Expression RPAREN\n     SimpleStmt     \t\t: ShortVarDecl\n                            | EmptyStmt\n\t\t\t\t\t\t\t| ExpressionStmt\n                            | IncDecStmt\n                            | Assignment  EmptyStmt      \t\t:  ExpressionStmt \t\t: Expression  IncDecStmt     \t\t: Expression INC\n                            | Expression DEC  Assignment     \t\t: UnaryExpr assign_op Expression  ReturnStmt     \t\t: RETURN\n\t\t\t\t\t\t\t| RETURN Expression  BreakStmt      \t\t: BREAK\n\t\t\t\t\t\t\t| BREAK ID  ContinueStmt   \t\t: CONTINUE\n\t\t\t\t\t\t\t| CONTINUE ID  LabeledStmt    \t\t: ID COLON Statement  GotoStmt       \t\t: GOTO ID  IfStmt         \t\t: IF Expression StartScope Block EndScope IfStmt         \t\t: IF Expression StartScope Block EndScope ELSE StartScope Block EndScope IfStmt         \t\t: IF Expression StartScope Block EndScope ELSE IfStmt  ForStmt : FOR ForSig StartScope Block EndScope  ForSig \t\t    : ForClause Condition \t\t    : Expression  ForClause \t\t    : SimpleStmt SEMICOLON Condition SEMICOLON SimpleStmt  SwitchStmt          : ExprSwitchStmt  ExprSwitchStmt      : SWITCH Expression LBRACE ExprCaseClauseList RBRACE\n     ExprCaseClauseList  : ExprCaseClause\n                            | ExprCaseClauseList ExprCaseClause  ExprCaseClause      : ExprSwitchCase COLON StatementList  ExprSwitchCase      : DEFAULT\n                            | CASE Expression\n     ExpressionList  \t: Expression\n\t\t\t\t\t\t\t| ExpressionList COMMA Expression  Expression     \t\t: Expression1  Expression1    \t\t: Expression2\n\t\t\t\t\t\t\t| Expression1 LOR Expression2  Expression2    \t\t: Expression3\n\t\t\t\t\t\t\t| Expression2 LAND Expression3  Expression3    \t\t: Expression4\n\t\t\t\t\t\t\t| Expression3 rel_op Expression4  Expression4    \t\t: Expression5\n\t\t\t\t\t\t\t| Expression4 add_op Expression5  Expression5    \t\t: UnaryExpr\n\t\t\t\t\t\t\t| Expression5 mul_op UnaryExpr  UnaryExpr      \t\t: PrimaryExpr\n\t\t\t\t\t\t\t| unary_op UnaryExpr  PrimaryExpr    \t\t: Operand  PrimaryExpr    \t\t: PrimaryExpr Selector  Selector       \t\t: PERIOD ID  PrimaryExpr    \t\t: PrimaryExpr Index  Index          \t\t: LBRACK Expression RBRACK  PrimaryExpr    \t\t: PrimaryExpr Arguments\n     Arguments           : LPAREN RPAREN\n                            | LPAREN ExpressionList COMMA RPAREN\n                            | LPAREN ExpressionList RPAREN  Operand        \t\t: Literal Operand        \t\t: ID Operand        \t\t: LPAREN Expression RPAREN  Literal        \t\t: BasicLit  BasicLit       \t\t: INT  BasicLit       \t\t: FLOAT  BasicLit       \t\t: IMAG  BasicLit       \t\t: BOOLVAL  BasicLit       \t\t: RUNE  BasicLit       \t\t: STRING  assign_op      \t\t: ASSIGN\n\t\t\t\t\t\t\t| ADD_ASSIGN\n\t\t\t\t\t\t\t| SUB_ASSIGN\n\t\t\t\t\t\t\t| MUL_ASSIGN\n\t\t\t\t\t\t\t| QUO_ASSIGN\n\t\t\t\t\t\t\t| REM_ASSIGN\n\t\t\t\t\t\t\t| AND_ASSIGN\n\t\t\t\t\t\t\t| OR_ASSIGN\n\t\t\t\t\t\t\t| XOR_ASSIGN\n\t\t\t\t\t\t\t| SHL_ASSIGN\n\t\t\t\t\t\t\t| SHR_ASSIGN\n\t\t\t\t\t\t\t| AND_NOT_ASSIGN\n     rel_op         \t\t: EQL\n\t\t\t\t\t\t\t| NEQ\n\t\t\t\t\t\t\t| LSS\n\t\t\t\t\t\t\t| LEQ\n\t\t\t\t\t\t\t| GTR\n\t\t\t\t\t\t\t| GEQ\n     add_op         \t\t: ADD\n\t\t\t\t\t\t\t| SUB\n\t\t\t\t\t\t\t| OR\n\t\t\t\t\t\t\t| XOR  mul_op         \t\t: MUL\n\t\t\t\t\t\t\t| QUO\n\t\t\t\t\t\t\t| REM\n\t\t\t\t\t\t\t| SHL\n\t\t\t\t\t\t\t| SHR\n\t\t\t\t\t\t\t| AND\n\t\t\t\t\t\t\t| AND_NOT  unary_op       \t\t: ADD\n\t\t\t\t\t\t\t| SUB\n\t\t\t\t\t\t\t| NOT\n\t\t\t\t\t\t\t| XOR\n\t\t\t\t\t\t\t| MUL\n\t\t\t\t\t\t\t| AND '
    
_lr_action_items = {'FUNC':([1,7,11,17,18,23,32,33,37,],[12,12,12,-13,-6,12,-5,-14,-7,]),'RETURN':([112,165,212,243,254,283,288,],[166,166,-71,166,-70,166,166,]),'SUB':([45,52,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,98,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,144,145,147,148,165,166,173,177,187,188,189,193,195,196,197,200,201,212,217,218,222,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,254,258,265,273,280,283,288,],[68,68,-183,-143,68,-186,-184,-146,-151,-128,134,-185,-152,-149,-130,-134,-182,68,-144,-187,-147,-148,-150,-132,68,68,68,-133,68,-170,-168,-169,-167,68,-165,-166,68,-180,68,-178,-181,-177,-179,-175,-176,-174,-172,-171,68,-173,-137,68,-135,-139,68,68,68,68,68,68,68,-130,-144,68,134,-131,-129,-145,-136,-140,-71,68,68,-144,68,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,68,-162,-154,68,-138,68,-142,-70,68,-141,68,68,68,68,]),'SCAN':([112,165,212,243,254,283,288,],[183,183,-71,183,-70,183,183,]),'DEFAULT':([212,254,260,276,277,285,288,],[-71,-70,275,-114,275,-115,-116,]),'GOTO':([112,165,212,243,254,283,288,],[162,162,-71,162,-70,162,162,]),'SHR_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,231,-144,-145,-136,-140,-144,-138,-142,-141,]),'LOR':([69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,192,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,116,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-123,-127,-125,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'COLON':([69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,188,192,193,194,195,196,197,200,201,245,247,265,274,275,282,],[-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,243,-123,-127,-125,-131,-129,-145,-136,-140,-138,-142,-141,283,-117,-118,]),'REM':([69,73,74,78,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,129,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-131,129,-145,-136,-140,-144,-138,-142,-141,]),'PRINT':([112,165,212,243,254,283,288,],[168,168,-71,168,-70,168,168,]),'MUL':([25,28,31,44,45,52,57,62,68,69,70,71,72,73,74,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,98,103,106,108,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,143,144,145,147,148,154,165,166,173,177,187,188,189,195,196,197,200,201,208,210,212,217,218,222,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,254,258,265,273,280,283,288,],[-65,44,-32,44,71,71,44,44,-183,-143,71,-186,-184,-146,-151,131,-185,-152,-149,-130,-134,-182,71,-144,-187,-147,-148,-150,-132,-66,71,71,44,-49,44,71,-133,71,-170,-168,-169,-167,71,-165,-166,71,-180,71,-178,-181,-177,-179,-175,-176,-174,-172,-171,71,-173,44,-137,71,-135,-139,71,71,71,-50,71,71,71,71,-130,-144,71,-131,131,-145,-136,-140,44,-51,-71,71,71,-144,71,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,71,-162,-154,71,-138,71,-142,-70,71,-141,71,71,71,71,]),'RUNE':([45,52,68,70,71,72,80,85,86,89,95,98,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,145,147,148,165,166,173,177,189,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,254,258,273,280,283,288,],[74,74,-183,74,-186,-184,-185,-182,74,-187,74,74,74,74,-170,-168,-169,-167,74,-165,-166,74,-180,74,-178,-181,-177,-179,-175,-176,-174,-172,-171,74,-173,74,74,74,74,74,74,74,74,74,-71,74,74,74,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,74,-162,-154,74,74,-70,74,74,74,74,74,]),'NEQ':([69,73,74,76,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,123,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-127,123,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'CASE':([212,254,260,276,277,285,288,],[-71,-70,273,-114,273,-115,-116,]),'GEQ':([69,73,74,76,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,117,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-127,117,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'DEC':([69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,179,187,188,192,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,226,-130,-144,-123,-127,-125,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'RPAREN':([21,27,29,36,41,42,43,46,47,48,49,55,58,61,64,67,69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,97,102,105,107,109,114,115,138,140,143,144,145,151,153,155,192,193,194,195,196,197,198,200,201,202,204,209,211,245,246,247,251,253,256,261,265,267,],[34,39,54,59,65,-37,-34,-36,-35,-33,-38,100,-11,106,-58,-46,-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-119,-28,-12,154,-52,-59,-133,197,-137,-135,-139,201,-29,210,-54,-123,-127,-125,-131,-129,-145,-39,-136,-140,247,-120,-18,-53,-138,265,-142,-18,-41,269,278,-141,-40,]),'MUL_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,238,-144,-145,-136,-140,-144,-138,-142,-141,]),'SEMICOLON':([4,5,6,8,10,14,16,19,20,22,26,30,34,35,39,40,42,43,46,47,48,49,51,54,56,59,60,62,63,65,66,67,69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,96,97,100,101,104,106,110,111,112,113,115,140,143,144,146,152,154,156,157,158,159,160,161,163,164,165,166,169,171,172,173,174,175,176,178,179,180,181,182,184,185,186,187,188,190,191,192,193,194,195,196,197,198,200,201,204,205,206,209,210,212,213,214,215,216,219,220,222,224,226,227,228,243,245,247,248,250,251,252,253,254,255,257,262,263,265,267,268,269,270,271,272,278,279,281,283,284,286,288,291,292,293,],[-16,17,18,-15,-23,-24,32,33,-10,37,-55,-25,-9,58,-57,64,-37,-34,-36,-35,-33,-38,-60,-27,102,-8,105,-47,-18,-56,114,-46,-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-61,-119,-26,151,-31,-49,-48,-21,-92,-18,-133,-137,-135,-139,-62,-30,-50,-76,-89,-84,212,-80,-91,-77,-88,-92,-97,-83,-90,-78,-92,-82,-101,-87,-72,-93,-99,-74,-112,-73,-81,-69,-130,-144,-75,-22,-123,-127,-125,-131,-129,-145,-39,-136,-140,-120,-63,249,-18,-51,-71,-104,254,-68,-98,-18,258,-144,-102,-95,-94,-100,-92,-138,-142,-64,266,-18,-45,-41,-70,-67,-79,-96,-103,-141,-40,-44,-85,280,-110,-18,-86,-18,-108,-92,-113,-105,-92,-107,-18,-106,]),'REM_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,234,-144,-145,-136,-140,-144,-138,-142,-141,]),'SWITCH':([112,165,212,243,254,283,288,],[177,177,-71,177,-70,177,177,]),'AND_NOT':([69,73,74,78,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,128,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-131,128,-145,-136,-140,-144,-138,-142,-141,]),'AND_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,237,-144,-145,-136,-140,-144,-138,-142,-141,]),'COMMA':([25,28,42,43,46,47,48,49,67,69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,94,96,97,107,108,109,115,140,143,144,146,149,155,167,188,192,193,194,195,196,197,198,200,201,202,203,204,208,209,211,222,245,247,251,253,255,265,267,],[-65,50,-37,-34,-36,-35,-33,-38,-46,-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-66,148,-119,153,50,-52,-133,-137,-135,-139,148,148,-54,50,-65,-123,-127,-125,-131,-129,-145,-39,-136,-140,246,148,-120,50,-18,-53,-65,-138,-142,-18,-41,148,-141,-40,]),'LSS':([69,73,74,76,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,120,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-127,120,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'IMPORT':([1,11,18,32,37,],[9,9,-6,-5,-7,]),'GTR':([69,73,74,76,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,119,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-127,119,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'ASSIGN':([25,28,31,42,43,46,47,48,49,51,57,67,69,73,74,81,82,84,88,90,91,92,93,94,115,140,143,144,187,188,197,198,200,201,209,222,245,247,251,253,265,267,],[-65,52,-32,-37,-34,-36,-35,-33,-38,95,103,-46,-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-66,-133,-137,-135,-139,236,-144,-145,-39,-136,-140,-18,-144,-138,-142,-18,-41,-141,-40,]),'$end':([1,3,7,11,17,18,23,32,33,37,],[-4,0,-3,-2,-13,-6,-1,-5,-14,-7,]),'SUB_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,230,-144,-145,-136,-140,-144,-138,-142,-141,]),'SHR':([69,73,74,78,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,130,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-131,130,-145,-136,-140,-144,-138,-142,-141,]),'XOR':([45,52,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,98,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,144,145,147,148,165,166,173,177,187,188,189,193,195,196,197,200,201,212,217,218,222,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,254,258,265,273,280,283,288,],[80,80,-183,-143,80,-186,-184,-146,-151,-128,133,-185,-152,-149,-130,-134,-182,80,-144,-187,-147,-148,-150,-132,80,80,80,-133,80,-170,-168,-169,-167,80,-165,-166,80,-180,80,-178,-181,-177,-179,-175,-176,-174,-172,-171,80,-173,-137,80,-135,-139,80,80,80,80,80,80,80,-130,-144,80,133,-131,-129,-145,-136,-140,-71,80,80,-144,80,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,80,-162,-154,80,-138,80,-142,-70,80,-141,80,80,80,80,]),'STRING':([9,21,36,42,43,45,46,47,48,49,52,58,67,68,70,71,72,80,85,86,89,95,98,105,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,145,147,148,165,166,173,177,189,198,209,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,251,252,253,254,258,267,273,280,283,288,],[20,35,60,-37,-34,81,-36,-35,-33,-38,81,-11,-46,-183,81,-186,-184,-185,-182,81,-187,81,81,-12,81,81,-170,-168,-169,-167,81,-165,-166,81,-180,81,-178,-181,-177,-179,-175,-176,-174,-172,-171,81,-173,81,81,81,81,81,81,81,81,81,-39,-18,-71,81,81,81,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,81,-162,-154,81,81,-18,268,-41,-70,81,-40,81,81,81,81,]),'FOR':([112,165,212,243,254,283,288,],[173,173,-71,173,-70,173,173,]),'PACKAGE':([0,],[2,]),'QUO_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,233,-144,-145,-136,-140,-144,-138,-142,-141,]),'IMAG':([45,52,68,70,71,72,80,85,86,89,95,98,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,145,147,148,165,166,173,177,189,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,254,258,273,280,283,288,],[82,82,-183,82,-186,-184,-185,-182,82,-187,82,82,82,82,-170,-168,-169,-167,82,-165,-166,82,-180,82,-178,-181,-177,-179,-175,-176,-174,-172,-171,82,-173,82,82,82,82,82,82,82,82,82,-71,82,82,82,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,82,-162,-154,82,82,-70,82,82,82,82,82,]),'RBRACK':([69,73,74,75,76,77,78,79,81,82,83,84,87,88,90,91,92,93,115,140,143,144,192,193,194,195,196,197,199,200,201,245,247,265,],[-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,139,-144,-147,-148,-150,-132,-133,-137,-135,-139,-123,-127,-125,-131,-129,-145,245,-136,-140,-138,-142,-141,]),'PERIOD':([69,73,74,81,82,84,88,90,91,92,93,140,143,144,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,142,-137,-135,-139,-144,-145,-136,-140,-144,-138,-142,-141,]),'RBRACE':([69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,97,112,115,140,143,144,149,150,165,192,193,194,195,196,197,200,201,203,204,207,212,245,247,249,254,265,266,276,277,285,288,],[-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-119,186,-133,-137,-135,-139,205,209,215,-123,-127,-125,-131,-129,-145,-136,-140,248,-120,251,-71,-138,-142,-42,-70,-141,-43,-114,284,-115,-116,]),'ELSE':([186,215,279,286,],[-69,-68,-18,289,]),'ADD':([45,52,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,98,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,144,145,147,148,165,166,173,177,187,188,189,193,195,196,197,200,201,212,217,218,222,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,254,258,265,273,280,283,288,],[85,85,-183,-143,85,-186,-184,-146,-151,-128,135,-185,-152,-149,-130,-134,-182,85,-144,-187,-147,-148,-150,-132,85,85,85,-133,85,-170,-168,-169,-167,85,-165,-166,85,-180,85,-178,-181,-177,-179,-175,-176,-174,-172,-171,85,-173,-137,85,-135,-139,85,85,85,85,85,85,85,-130,-144,85,135,-131,-129,-145,-136,-140,-71,85,85,-144,85,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,85,-162,-154,85,-138,85,-142,-70,85,-141,85,85,85,85,]),'LAND':([69,73,74,76,77,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,192,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,-124,124,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,124,-127,-125,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'EQL':([69,73,74,76,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-127,122,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'LPAREN':([9,13,15,24,38,45,52,68,69,70,71,72,73,74,80,81,82,84,85,86,88,89,90,91,92,93,95,98,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,144,145,147,148,165,166,168,173,177,183,188,189,197,200,201,212,217,218,222,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,254,258,265,273,280,283,288,],[21,27,29,-20,61,86,86,-183,-143,86,-186,-184,-146,-151,-185,-152,-149,-134,-182,86,-144,-187,-147,-148,-150,145,86,86,86,86,-170,-168,-169,-167,86,-165,-166,86,-180,86,-178,-181,-177,-179,-175,-176,-174,-172,-171,86,-173,-137,86,-135,-139,86,86,86,86,86,218,86,86,229,-144,86,-145,-136,-140,-71,86,86,-144,86,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,86,-162,-154,86,-138,86,-142,-70,86,-141,86,86,86,86,]),'VAR':([1,7,11,17,18,23,32,33,37,112,165,212,243,254,283,288,],[13,13,13,-13,-6,13,-5,-14,-7,13,13,-71,13,-70,13,13,]),'SHL_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,241,-144,-145,-136,-140,-144,-138,-142,-141,]),'SHL':([69,73,74,78,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,127,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-131,127,-145,-136,-140,-144,-138,-142,-141,]),'ID':([2,12,13,15,25,27,28,29,31,41,44,45,50,52,55,57,61,62,64,68,70,71,72,80,85,86,89,94,95,98,102,103,106,108,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,145,147,148,150,151,153,154,162,165,166,173,175,177,180,189,207,208,210,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,249,254,258,266,273,280,283,288,],[16,24,25,31,-65,25,47,31,-32,25,47,88,94,88,31,47,25,47,-58,-183,88,-186,-184,-185,-182,88,-187,-66,88,88,-28,47,-49,47,188,-59,88,-170,-168,-169,-167,88,-165,-166,88,-180,88,-178,-181,-177,-179,-175,-176,-174,-172,-171,88,-173,47,88,200,88,88,88,25,-29,25,-50,213,188,88,222,224,88,228,88,25,47,-51,-71,88,88,88,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,88,-162,-154,188,88,-42,-70,88,-43,88,222,188,188,]),'IF':([112,165,212,243,254,283,288,289,],[189,189,-71,189,-70,189,189,189,]),'AND':([45,52,68,69,70,71,72,73,74,78,80,81,82,83,84,85,86,88,89,90,91,92,93,95,98,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,144,145,147,148,165,166,173,177,187,188,189,195,196,197,200,201,212,217,218,222,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,254,258,265,273,280,283,288,],[89,89,-183,-143,89,-186,-184,-146,-151,125,-185,-152,-149,-130,-134,-182,89,-144,-187,-147,-148,-150,-132,89,89,89,-133,89,-170,-168,-169,-167,89,-165,-166,89,-180,89,-178,-181,-177,-179,-175,-176,-174,-172,-171,89,-173,-137,89,-135,-139,89,89,89,89,89,89,89,-130,-144,89,-131,125,-145,-136,-140,-71,89,89,-144,89,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,89,-162,-154,89,-138,89,-142,-70,89,-141,89,89,89,89,]),'LBRACE':([42,43,46,47,48,49,52,53,62,63,67,69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,95,97,99,106,110,112,115,140,143,144,154,157,161,164,165,170,171,176,179,187,192,193,194,195,196,197,198,200,201,204,209,210,212,221,222,223,225,226,227,243,244,245,247,251,253,254,255,259,262,264,265,267,280,283,287,288,289,290,],[-37,-34,-36,-35,-33,-38,98,-19,-47,112,-46,-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,147,-119,150,-49,-48,-17,-133,-137,-135,-139,-50,-89,-91,-88,-17,112,-90,-87,-93,-130,-123,-127,-125,-131,-129,-145,-39,-136,-140,-120,-18,-51,-71,-17,-144,-109,260,-95,-94,-17,-17,-138,-142,-18,-41,-70,-67,112,-96,112,-141,-40,-92,-17,-111,-17,-17,112,]),'STRUCT':([25,28,31,44,57,62,94,103,106,108,139,154,208,210,],[-65,53,-32,53,53,53,-66,53,-49,53,53,-50,53,-51,]),'XOR_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,232,-144,-145,-136,-140,-144,-138,-142,-141,]),'INT':([45,52,68,70,71,72,80,85,86,89,95,98,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,145,147,148,165,166,173,177,189,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,254,258,273,280,283,288,],[90,90,-183,90,-186,-184,-185,-182,90,-187,90,90,90,90,-170,-168,-169,-167,90,-165,-166,90,-180,90,-178,-181,-177,-179,-175,-176,-174,-172,-171,90,-173,90,90,90,90,90,90,90,90,90,-71,90,90,90,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,90,-162,-154,90,90,-70,90,90,90,90,90,]),'FLOAT':([45,52,68,70,71,72,80,85,86,89,95,98,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,145,147,148,165,166,173,177,189,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,254,258,273,280,283,288,],[91,91,-183,91,-186,-184,-185,-182,91,-187,91,91,91,91,-170,-168,-169,-167,91,-165,-166,91,-180,91,-178,-181,-177,-179,-175,-176,-174,-172,-171,91,-173,91,91,91,91,91,91,91,91,91,-71,91,91,91,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,91,-162,-154,91,91,-70,91,91,91,91,91,]),'OR_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,235,-144,-145,-136,-140,-144,-138,-142,-141,]),'LBRACK':([25,28,31,44,57,62,69,73,74,81,82,84,88,90,91,92,93,94,103,106,108,139,140,143,144,154,188,197,200,201,208,210,222,245,247,265,],[-65,45,-32,45,45,45,-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,141,-66,45,-49,45,45,-137,-135,-139,-50,-144,-145,-136,-140,45,-51,-144,-138,-142,-141,]),'ADD_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,242,-144,-145,-136,-140,-144,-138,-142,-141,]),'BREAK':([112,165,212,243,254,283,288,],[180,180,-71,180,-70,180,180,]),'LEQ':([69,73,74,76,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,118,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-127,118,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'BOOLVAL':([45,52,68,70,71,72,80,85,86,89,95,98,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,145,147,148,165,166,173,177,189,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,254,258,273,280,283,288,],[92,92,-183,92,-186,-184,-185,-182,92,-187,92,92,92,92,-170,-168,-169,-167,92,-165,-166,92,-180,92,-178,-181,-177,-179,-175,-176,-174,-172,-171,92,-173,92,92,92,92,92,92,92,92,92,-71,92,92,92,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,92,-162,-154,92,92,-70,92,92,92,92,92,]),'CONTINUE':([112,165,212,243,254,283,288,],[175,175,-71,175,-70,175,175,]),'VARTYPE':([25,28,31,44,57,62,94,103,106,108,139,154,208,210,],[-65,48,-32,48,48,48,-66,48,-49,48,48,-50,48,-51,]),'AND_NOT_ASSIGN':([69,73,74,81,82,84,88,90,91,92,93,115,140,143,144,187,188,197,200,201,222,245,247,265,],[-143,-146,-151,-152,-149,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,239,-144,-145,-136,-140,-144,-138,-142,-141,]),'NOT':([45,52,68,70,71,72,80,85,86,89,95,98,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,145,147,148,165,166,173,177,189,212,217,218,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,254,258,273,280,283,288,],[72,72,-183,72,-186,-184,-185,-182,72,-187,72,72,72,72,-170,-168,-169,-167,72,-165,-166,72,-180,72,-178,-181,-177,-179,-175,-176,-174,-172,-171,72,-173,72,72,72,72,72,72,72,72,72,-71,72,72,72,-155,-163,-161,-157,-158,-160,-153,-159,-156,-164,72,-162,-154,72,72,-70,72,72,72,72,72,]),'DEFINE':([94,167,188,222,],[-66,217,-65,-65,]),'TYPE':([1,7,11,17,18,23,32,33,37,112,165,212,243,254,283,288,],[15,15,15,-13,-6,15,-5,-14,-7,15,15,-71,15,-70,15,15,]),'OR':([69,73,74,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,193,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,-128,137,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,137,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),'QUO':([69,73,74,78,81,82,83,84,88,90,91,92,93,115,140,143,144,187,188,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,132,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,-130,-144,-131,132,-145,-136,-140,-144,-138,-142,-141,]),'INC':([69,73,74,75,76,77,78,79,81,82,83,84,88,90,91,92,93,115,140,143,144,179,187,188,192,193,194,195,196,197,200,201,222,245,247,265,],[-143,-146,-151,-121,-124,-122,-128,-126,-152,-149,-130,-134,-144,-147,-148,-150,-132,-133,-137,-135,-139,227,-130,-144,-123,-127,-125,-131,-129,-145,-136,-140,-144,-138,-142,-141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Index':([93,],[140,]),'mul_op':([78,196,],[126,126,]),'Statement':([112,165,243,283,288,],[159,214,263,159,214,]),'Parameters':([38,],[62,]),'ScanStmt':([112,165,243,283,288,],[158,158,158,158,158,]),'ContinueStmt':([112,165,243,283,288,],[156,156,156,156,156,]),'SourceFile':([0,],[3,]),'ArrayType':([28,44,57,62,103,108,139,208,],[46,46,46,46,46,46,46,46,]),'FunctionDecl':([1,7,11,23,],[4,4,4,4,]),'TopLevelDecl':([1,7,11,23,],[5,19,5,19,]),'Literal':([45,52,70,86,95,98,112,116,121,124,126,136,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'ForStmt':([112,165,243,283,288,],[185,185,185,185,185,]),'unary_op':([45,52,70,86,95,98,112,116,121,124,126,136,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'SimpleStmt':([112,165,173,243,280,283,288,],[184,184,220,184,287,184,184,]),'IdentifierList':([13,27,41,61,112,150,153,165,173,207,243,280,283,288,],[28,28,28,108,167,208,108,167,167,208,167,167,167,167,]),'ImportSpecList':([21,],[36,]),'StartFuncScope':([24,],[38,]),'Type':([28,44,57,62,103,108,139,208,],[51,67,104,110,152,155,198,252,]),'ImportDecl':([1,11,],[6,22,]),'PackageClause':([0,],[1,]),'FieldDecl':([150,207,],[206,250,]),'BasicLit':([45,52,70,86,95,98,112,116,121,124,126,136,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'SwitchStmt':([112,165,243,283,288,],[174,174,174,174,174,]),'PrintStmt':([112,165,243,283,288,],[169,169,169,169,169,]),'Selector':([93,],[143,]),'ForSig':([173,],[221,]),'VarSpecList':([27,],[41,]),'StartScope':([112,165,221,243,244,283,288,289,],[170,170,259,170,264,170,170,290,]),'IncDecStmt':([112,165,173,243,280,283,288,],[171,171,171,171,171,171,171,]),'TopLevelDeclList':([1,11,],[7,23,]),'Declaration':([1,7,11,23,112,165,243,283,288,],[8,8,8,8,178,178,178,178,178,]),'Expression1':([45,52,86,95,98,112,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ExprCaseClause':([260,277,],[276,285,]),'Expression3':([45,52,86,95,98,112,116,124,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[76,76,76,76,76,76,76,194,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'Expression2':([45,52,86,95,98,112,116,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[77,77,77,77,77,77,192,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'Expression5':([45,52,86,95,98,112,116,121,124,136,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[78,78,78,78,78,78,78,78,78,196,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'Expression4':([45,52,86,95,98,112,116,121,124,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[79,79,79,79,79,79,79,193,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'SaveTypeName':([31,],[57,]),'GotoStmt':([112,165,243,283,288,],[172,172,172,172,172,]),'StructType':([28,44,57,62,103,108,139,208,],[42,42,42,42,42,42,42,42,]),'Condition':([258,],[270,]),'TypeDecl':([1,7,11,23,112,165,243,283,288,],[10,10,10,10,10,10,10,10,10,]),'EndScope':([63,113,209,219,251,272,279,292,],[111,191,253,257,267,281,286,293,]),'LabeledStmt':([112,165,243,283,288,],[163,163,163,163,163,]),'EmptyStmt':([112,165,173,243,280,283,288,],[164,164,164,164,164,164,164,]),'IfStmt':([112,165,243,283,288,289,],[160,160,160,160,160,291,]),'UnaryExpr':([45,52,70,86,95,98,112,116,121,124,126,136,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[83,83,115,83,83,83,187,83,83,83,195,83,83,83,83,83,187,83,187,83,83,83,83,83,83,187,83,83,83,187,187,187,]),'StatementList':([112,283,],[165,288,]),'assign_op':([187,],[240,]),'PrimaryExpr':([45,52,70,86,95,98,112,116,121,124,126,136,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'ExpressionList':([52,95,98,145,147,217,],[96,146,149,202,203,255,]),'ImportDeclList':([1,],[11,]),'Operand':([45,52,70,86,95,98,112,116,121,124,126,136,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'Signature':([38,],[63,]),'ForClause':([173,],[223,]),'Expression':([45,52,86,95,98,112,141,145,147,148,165,166,173,177,189,217,218,229,240,243,246,258,273,280,283,288,],[87,97,138,97,97,179,199,97,97,204,179,216,179,225,244,97,256,261,262,179,204,271,282,179,179,179,]),'ShortVarDecl':([112,165,173,243,280,283,288,],[176,176,176,176,176,176,176,]),'Block':([63,170,259,264,290,],[113,219,272,279,292,]),'ParameterList':([61,],[107,]),'FieldDeclList':([150,],[207,]),'LiteralType':([28,44,57,62,103,108,139,208,],[43,43,43,43,43,43,43,43,]),'StartStructScope':([53,],[99,]),'ParameterDecl':([61,153,],[109,211,]),'BreakStmt':([112,165,243,283,288,],[190,190,190,190,190,]),'ExprSwitchCase':([260,277,],[274,274,]),'VarDecl':([1,7,11,23,112,165,243,283,288,],[14,14,14,14,14,14,14,14,14,]),'ExpressionStmt':([112,165,173,243,280,283,288,],[157,157,157,157,157,157,157,]),'ExprSwitchStmt':([112,165,243,283,288,],[182,182,182,182,182,]),'VarSpec':([13,27,41,],[26,40,66,]),'add_op':([79,193,],[136,136,]),'TypeSpecList':([29,],[55,]),'Assignment':([112,165,173,243,280,283,288,],[161,161,161,161,161,161,161,]),'PointerType':([28,44,57,62,103,108,139,208,],[49,49,49,49,49,49,49,49,]),'TypeSpec':([15,29,55,],[30,56,101,]),'ReturnStmt':([112,165,243,283,288,],[181,181,181,181,181,]),'rel_op':([76,194,],[121,121,]),'ExprCaseClauseList':([260,],[277,]),'Arguments':([93,],[144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PackageClause ImportDeclList TopLevelDeclList','SourceFile',3,'p_SourceFile','parser.py',90),
  ('SourceFile -> PackageClause ImportDeclList','SourceFile',2,'p_SourceFile','parser.py',91),
  ('SourceFile -> PackageClause TopLevelDeclList','SourceFile',2,'p_SourceFile','parser.py',92),
  ('SourceFile -> PackageClause','SourceFile',1,'p_SourceFile','parser.py',93),
  ('PackageClause -> PACKAGE ID SEMICOLON','PackageClause',3,'p_PackageClause','parser.py',99),
  ('ImportDeclList -> ImportDecl SEMICOLON','ImportDeclList',2,'p_ImportDeclList','parser.py',103),
  ('ImportDeclList -> ImportDeclList ImportDecl SEMICOLON','ImportDeclList',3,'p_ImportDeclList','parser.py',104),
  ('ImportDecl -> IMPORT LPAREN ImportSpecList RPAREN','ImportDecl',4,'p_ImportDecl','parser.py',107),
  ('ImportDecl -> IMPORT LPAREN RPAREN','ImportDecl',3,'p_ImportDecl','parser.py',108),
  ('ImportDecl -> IMPORT STRING','ImportDecl',2,'p_ImportDecl','parser.py',109),
  ('ImportSpecList -> STRING SEMICOLON','ImportSpecList',2,'p_ImportSpecList','parser.py',129),
  ('ImportSpecList -> ImportSpecList STRING SEMICOLON','ImportSpecList',3,'p_ImportSpecList','parser.py',130),
  ('TopLevelDeclList -> TopLevelDecl SEMICOLON','TopLevelDeclList',2,'p_TopLevelDeclList','parser.py',150),
  ('TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON','TopLevelDeclList',3,'p_TopLevelDeclList','parser.py',151),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parser.py',154),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parser.py',155),
  ('StartScope -> <empty>','StartScope',0,'p_StartScope','parser.py',161),
  ('EndScope -> <empty>','EndScope',0,'p_EndScope','parser.py',165),
  ('StartStructScope -> <empty>','StartStructScope',0,'p_StartStructScope','parser.py',175),
  ('StartFuncScope -> <empty>','StartFuncScope',0,'p_StartFuncScope','parser.py',186),
  ('FunctionDecl -> FUNC ID StartFuncScope Signature EndScope','FunctionDecl',5,'p_FunctionDecl','parser.py',199),
  ('FunctionDecl -> FUNC ID StartFuncScope Signature Block EndScope','FunctionDecl',6,'p_FunctionDecl','parser.py',200),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','parser.py',220),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parser.py',221),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_TypeDecl','parser.py',229),
  ('TypeDecl -> TYPE LPAREN TypeSpecList RPAREN','TypeDecl',4,'p_TypeDecl','parser.py',230),
  ('TypeDecl -> TYPE LPAREN RPAREN','TypeDecl',3,'p_TypeDecl','parser.py',231),
  ('TypeSpecList -> TypeSpec SEMICOLON','TypeSpecList',2,'p_TypeSpecList','parser.py',235),
  ('TypeSpecList -> TypeSpecList TypeSpec SEMICOLON','TypeSpecList',3,'p_TypeSpecList','parser.py',236),
  ('TypeSpec -> ID SaveTypeName ASSIGN Type','TypeSpec',4,'p_TypeSpec','parser.py',239),
  ('TypeSpec -> ID SaveTypeName Type','TypeSpec',3,'p_TypeSpec','parser.py',240),
  ('SaveTypeName -> <empty>','SaveTypeName',0,'p_SaveTypeName','parser.py',250),
  ('Type -> VARTYPE','Type',1,'p_Type1','parser.py',260),
  ('Type -> LiteralType','Type',1,'p_Type2','parser.py',264),
  ('Type -> ID','Type',1,'p_Type3','parser.py',269),
  ('LiteralType -> ArrayType','LiteralType',1,'p_LiteralType','parser.py',279),
  ('LiteralType -> StructType','LiteralType',1,'p_LiteralType','parser.py',280),
  ('LiteralType -> PointerType','LiteralType',1,'p_LiteralType','parser.py',281),
  ('ArrayType -> LBRACK Expression RBRACK Type','ArrayType',4,'p_ArrayType','parser.py',287),
  ('StructType -> STRUCT StartStructScope LBRACE FieldDeclList RBRACE EndScope','StructType',6,'p_StructType','parser.py',300),
  ('StructType -> STRUCT StartStructScope LBRACE RBRACE EndScope','StructType',5,'p_StructType','parser.py',301),
  ('FieldDeclList -> FieldDecl SEMICOLON','FieldDeclList',2,'p_FieldDeclList','parser.py',310),
  ('FieldDeclList -> FieldDeclList FieldDecl SEMICOLON','FieldDeclList',3,'p_FieldDeclList','parser.py',311),
  ('FieldDecl -> IdentifierList Type STRING','FieldDecl',3,'p_FieldDecl','parser.py',320),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_FieldDecl','parser.py',321),
  ('PointerType -> MUL Type','PointerType',2,'p_PointerType','parser.py',339),
  ('Signature -> Parameters','Signature',1,'p_Signature1','parser.py',358),
  ('Signature -> Parameters Type','Signature',2,'p_Signature1','parser.py',359),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_Parameters','parser.py',374),
  ('Parameters -> LPAREN ParameterList RPAREN','Parameters',3,'p_Parameters','parser.py',375),
  ('Parameters -> LPAREN ParameterList COMMA RPAREN','Parameters',4,'p_Parameters','parser.py',376),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parser.py',384),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parser.py',385),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_ParameterDecl','parser.py',392),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_VarDecl','parser.py',429),
  ('VarDecl -> VAR LPAREN VarSpecList RPAREN','VarDecl',4,'p_VarDecl','parser.py',430),
  ('VarDecl -> VAR LPAREN RPAREN','VarDecl',3,'p_VarDecl','parser.py',431),
  ('VarSpecList -> VarSpec SEMICOLON','VarSpecList',2,'p_VarSpecList','parser.py',440),
  ('VarSpecList -> VarSpecList VarSpec SEMICOLON','VarSpecList',3,'p_VarSpecList','parser.py',441),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parser.py',448),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_VarSpec','parser.py',449),
  ('VarSpec -> IdentifierList Type ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parser.py',450),
  ('VarSpec -> IdentifierList ASSIGN LBRACE ExpressionList RBRACE','VarSpec',5,'p_VarSpec','parser.py',451),
  ('VarSpec -> IdentifierList Type ASSIGN LBRACE ExpressionList RBRACE','VarSpec',6,'p_VarSpec','parser.py',452),
  ('IdentifierList -> ID','IdentifierList',1,'p_IdentifierList','parser.py',503),
  ('IdentifierList -> IdentifierList COMMA ID','IdentifierList',3,'p_IdentifierList','parser.py',504),
  ('ShortVarDecl -> IdentifierList DEFINE ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parser.py',512),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_Block','parser.py',537),
  ('Block -> LBRACE RBRACE','Block',2,'p_Block','parser.py',538),
  ('StatementList -> StatementList Statement SEMICOLON','StatementList',3,'p_StatementList','parser.py',546),
  ('StatementList -> Statement SEMICOLON','StatementList',2,'p_StatementList','parser.py',547),
  ('Statement -> Declaration','Statement',1,'p_Statement','parser.py',555),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','parser.py',556),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parser.py',557),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parser.py',558),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parser.py',559),
  ('Statement -> LabeledStmt','Statement',1,'p_Statement','parser.py',560),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','parser.py',561),
  ('Statement -> StartScope Block EndScope','Statement',3,'p_Statement','parser.py',562),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parser.py',563),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parser.py',564),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','parser.py',565),
  ('Statement -> PrintStmt','Statement',1,'p_Statement','parser.py',566),
  ('Statement -> ScanStmt','Statement',1,'p_Statement','parser.py',567),
  ('PrintStmt -> PRINT LPAREN Expression RPAREN','PrintStmt',4,'p_PrintStmt','parser.py',581),
  ('ScanStmt -> SCAN LPAREN Expression RPAREN','ScanStmt',4,'p_ScanStmt','parser.py',589),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parser.py',597),
  ('SimpleStmt -> EmptyStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',598),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',599),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',600),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parser.py',601),
  ('EmptyStmt -> <empty>','EmptyStmt',0,'p_EmptyStmt','parser.py',606),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_ExpressionStmt','parser.py',611),
  ('IncDecStmt -> Expression INC','IncDecStmt',2,'p_IncDecStmt','parser.py',620),
  ('IncDecStmt -> Expression DEC','IncDecStmt',2,'p_IncDecStmt','parser.py',621),
  ('Assignment -> UnaryExpr assign_op Expression','Assignment',3,'p_Assignment','parser.py',630),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','parser.py',662),
  ('ReturnStmt -> RETURN Expression','ReturnStmt',2,'p_ReturnStmt','parser.py',663),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_BreakStmt','parser.py',683),
  ('BreakStmt -> BREAK ID','BreakStmt',2,'p_BreakStmt','parser.py',684),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_ContinueStmt','parser.py',701),
  ('ContinueStmt -> CONTINUE ID','ContinueStmt',2,'p_ContinueStmt','parser.py',702),
  ('LabeledStmt -> ID COLON Statement','LabeledStmt',3,'p_LabeledStmt','parser.py',716),
  ('GotoStmt -> GOTO ID','GotoStmt',2,'p_GotoStmt','parser.py',721),
  ('IfStmt -> IF Expression StartScope Block EndScope','IfStmt',5,'p_IfStmt','parser.py',729),
  ('IfStmt -> IF Expression StartScope Block EndScope ELSE StartScope Block EndScope','IfStmt',9,'p_IfStmt1','parser.py',742),
  ('IfStmt -> IF Expression StartScope Block EndScope ELSE IfStmt','IfStmt',7,'p_IfStmt2','parser.py',755),
  ('ForStmt -> FOR ForSig StartScope Block EndScope','ForStmt',5,'p_ForStmt','parser.py',767),
  ('ForSig -> ForClause','ForSig',1,'p_ForSig','parser.py',780),
  ('Condition -> Expression','Condition',1,'p_Condition','parser.py',788),
  ('ForClause -> SimpleStmt SEMICOLON Condition SEMICOLON SimpleStmt','ForClause',5,'p_ForClause','parser.py',793),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_SwitchStmt','parser.py',808),
  ('ExprSwitchStmt -> SWITCH Expression LBRACE ExprCaseClauseList RBRACE','ExprSwitchStmt',5,'p_ExprSwitchStmt','parser.py',813),
  ('ExprCaseClauseList -> ExprCaseClause','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',851),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',852),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',860),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',866),
  ('ExprSwitchCase -> CASE Expression','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',867),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','parser.py',916),
  ('ExpressionList -> ExpressionList COMMA Expression','ExpressionList',3,'p_ExpressionList','parser.py',917),
  ('Expression -> Expression1','Expression',1,'p_Expression','parser.py',924),
  ('Expression1 -> Expression2','Expression1',1,'p_Expression1','parser.py',929),
  ('Expression1 -> Expression1 LOR Expression2','Expression1',3,'p_Expression1','parser.py',930),
  ('Expression2 -> Expression3','Expression2',1,'p_Expression2','parser.py',941),
  ('Expression2 -> Expression2 LAND Expression3','Expression2',3,'p_Expression2','parser.py',942),
  ('Expression3 -> Expression4','Expression3',1,'p_Expression3','parser.py',953),
  ('Expression3 -> Expression3 rel_op Expression4','Expression3',3,'p_Expression3','parser.py',954),
  ('Expression4 -> Expression5','Expression4',1,'p_Expression4','parser.py',984),
  ('Expression4 -> Expression4 add_op Expression5','Expression4',3,'p_Expression4','parser.py',985),
  ('Expression5 -> UnaryExpr','Expression5',1,'p_Expression5','parser.py',1021),
  ('Expression5 -> Expression5 mul_op UnaryExpr','Expression5',3,'p_Expression5','parser.py',1022),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parser.py',1064),
  ('UnaryExpr -> unary_op UnaryExpr','UnaryExpr',2,'p_UnaryExpr','parser.py',1065),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_PrimaryExpr','parser.py',1097),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr1','parser.py',1103),
  ('Selector -> PERIOD ID','Selector',2,'p_Selector','parser.py',1126),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr2','parser.py',1131),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_Index','parser.py',1154),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr5','parser.py',1166),
  ('Arguments -> LPAREN RPAREN','Arguments',2,'p_Arguments','parser.py',1218),
  ('Arguments -> LPAREN ExpressionList COMMA RPAREN','Arguments',4,'p_Arguments','parser.py',1219),
  ('Arguments -> LPAREN ExpressionList RPAREN','Arguments',3,'p_Arguments','parser.py',1220),
  ('Operand -> Literal','Operand',1,'p_Operand','parser.py',1254),
  ('Operand -> ID','Operand',1,'p_Operand1','parser.py',1258),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_Operand3','parser.py',1276),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parser.py',1281),
  ('BasicLit -> INT','BasicLit',1,'p_BasicLit','parser.py',1288),
  ('BasicLit -> FLOAT','BasicLit',1,'p_BasicLit1','parser.py',1296),
  ('BasicLit -> IMAG','BasicLit',1,'p_BasicLit2','parser.py',1304),
  ('BasicLit -> BOOLVAL','BasicLit',1,'p_BasicLit3','parser.py',1312),
  ('BasicLit -> RUNE','BasicLit',1,'p_BasicLit4','parser.py',1324),
  ('BasicLit -> STRING','BasicLit',1,'p_BasicLit5','parser.py',1332),
  ('assign_op -> ASSIGN','assign_op',1,'p_assign_op','parser.py',1376),
  ('assign_op -> ADD_ASSIGN','assign_op',1,'p_assign_op','parser.py',1377),
  ('assign_op -> SUB_ASSIGN','assign_op',1,'p_assign_op','parser.py',1378),
  ('assign_op -> MUL_ASSIGN','assign_op',1,'p_assign_op','parser.py',1379),
  ('assign_op -> QUO_ASSIGN','assign_op',1,'p_assign_op','parser.py',1380),
  ('assign_op -> REM_ASSIGN','assign_op',1,'p_assign_op','parser.py',1381),
  ('assign_op -> AND_ASSIGN','assign_op',1,'p_assign_op','parser.py',1382),
  ('assign_op -> OR_ASSIGN','assign_op',1,'p_assign_op','parser.py',1383),
  ('assign_op -> XOR_ASSIGN','assign_op',1,'p_assign_op','parser.py',1384),
  ('assign_op -> SHL_ASSIGN','assign_op',1,'p_assign_op','parser.py',1385),
  ('assign_op -> SHR_ASSIGN','assign_op',1,'p_assign_op','parser.py',1386),
  ('assign_op -> AND_NOT_ASSIGN','assign_op',1,'p_assign_op','parser.py',1387),
  ('rel_op -> EQL','rel_op',1,'p_rel_op','parser.py',1393),
  ('rel_op -> NEQ','rel_op',1,'p_rel_op','parser.py',1394),
  ('rel_op -> LSS','rel_op',1,'p_rel_op','parser.py',1395),
  ('rel_op -> LEQ','rel_op',1,'p_rel_op','parser.py',1396),
  ('rel_op -> GTR','rel_op',1,'p_rel_op','parser.py',1397),
  ('rel_op -> GEQ','rel_op',1,'p_rel_op','parser.py',1398),
  ('add_op -> ADD','add_op',1,'p_add_op','parser.py',1404),
  ('add_op -> SUB','add_op',1,'p_add_op','parser.py',1405),
  ('add_op -> OR','add_op',1,'p_add_op','parser.py',1406),
  ('add_op -> XOR','add_op',1,'p_add_op','parser.py',1407),
  ('mul_op -> MUL','mul_op',1,'p_mul_op','parser.py',1412),
  ('mul_op -> QUO','mul_op',1,'p_mul_op','parser.py',1413),
  ('mul_op -> REM','mul_op',1,'p_mul_op','parser.py',1414),
  ('mul_op -> SHL','mul_op',1,'p_mul_op','parser.py',1415),
  ('mul_op -> SHR','mul_op',1,'p_mul_op','parser.py',1416),
  ('mul_op -> AND','mul_op',1,'p_mul_op','parser.py',1417),
  ('mul_op -> AND_NOT','mul_op',1,'p_mul_op','parser.py',1418),
  ('unary_op -> ADD','unary_op',1,'p_unary_op','parser.py',1423),
  ('unary_op -> SUB','unary_op',1,'p_unary_op','parser.py',1424),
  ('unary_op -> NOT','unary_op',1,'p_unary_op','parser.py',1425),
  ('unary_op -> XOR','unary_op',1,'p_unary_op','parser.py',1426),
  ('unary_op -> MUL','unary_op',1,'p_unary_op','parser.py',1427),
  ('unary_op -> AND','unary_op',1,'p_unary_op','parser.py',1428),
]
